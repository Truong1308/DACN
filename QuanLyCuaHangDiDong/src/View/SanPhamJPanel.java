/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Database.ConnectDB;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nguye
 */
public class SanPhamJPanel extends javax.swing.JPanel 
{
    ConnectDB cnn = new ConnectDB();
    
    Locale localeEN = new Locale("en", "EN");
    NumberFormat en = NumberFormat.getInstance(localeEN);
    ImageIcon icon;
    
    
   
    int tam =0;
    Calendar cal = Calendar.getInstance();

    int day = cal.get(Calendar.DAY_OF_MONTH);
    int month = cal.get(Calendar.MONTH) + 1;
    int year = cal.get(Calendar.YEAR);
    /**
     * Creates new form SanPhamJPanel
     */
    public SanPhamJPanel() {
        initComponents();
        LaydulieuVon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtabblepaneSanPham = new javax.swing.JTabbedPane();
        jPanelSanPham = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblMaSP = new javax.swing.JLabel();
        lblTenSP = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblGiaNhap = new javax.swing.JLabel();
        lblGiaBan = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTonKho = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtGiaNhap = new javax.swing.JTextField();
        txtGiaBan = new javax.swing.JTextField();
        txtTonKho = new javax.swing.JTextField();
        cbbLoaiSP = new javax.swing.JComboBox<>();
        cbbHangSX = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChuThichSanPham = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        btnDoiHinh_SanPham = new javax.swing.JButton();
        txtImg_SanPham = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnThemSP = new javax.swing.JButton();
        btnSuaSP = new javax.swing.JButton();
        btnXoaSP = new javax.swing.JButton();
        btnResetSP = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        chkTimKiemSanPham = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        txtTenSanPhamTimKiem = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        cbbLoaiSanPham = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        labelHinhAnh = new javax.swing.JLabel();
        btnSanPhamAn = new javax.swing.JButton();
        jPanelLoaiSP = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaLoaiSP = new javax.swing.JTextField();
        txtTenLoaiSP = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLoaiSanPham = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSanPham_LoaiSp = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        btnThemLoaiSP = new javax.swing.JButton();
        btnSuaLoaiSP = new javax.swing.JButton();
        btnXoaLoaiSP = new javax.swing.JButton();
        btnResetLoaiSP = new javax.swing.JButton();
        jPanePhieuNhapHang = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtTongTienPN = new javax.swing.JTextField();
        txtMaPN = new javax.swing.JTextField();
        cbbNhaPhanPhoi = new javax.swing.JComboBox<>();
        cbbNV = new javax.swing.JComboBox<>();
        cbbNgayNhap = new javax.swing.JComboBox<>();
        cbbThangNhap = new javax.swing.JComboBox<>();
        cbbNamNhap = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtChuThichPN = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        btnThemPN = new javax.swing.JButton();
        btnSuaPN = new javax.swing.JButton();
        btnXoaPN = new javax.swing.JButton();
        btnResetPN = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPhieuNhap = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtMaCTPN = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtTongTienCTPN = new javax.swing.JTextField();
        txtMaPNCTPN = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtGhiChuCTPN = new javax.swing.JTextArea();
        cbbSanPhamCTPN = new javax.swing.JComboBox<>();
        jPanel14 = new javax.swing.JPanel();
        btnThemCTPN = new javax.swing.JButton();
        btnSuaCTPN = new javax.swing.JButton();
        btnXoaCTPN = new javax.swing.JButton();
        btnResetCTPN = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblCTPN = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTongVon = new javax.swing.JTextField();

        jPanelSanPham.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelSanPhamComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 102))); // NOI18N

        lblMaSP.setText("Mã SP:");

        lblTenSP.setText("Tên SP:");

        jLabel4.setText("Loại SP:");

        lblGiaNhap.setText("Giá nhập:");

        lblGiaBan.setText("Giá bán:");

        jLabel7.setText("Hãng SX:");

        lblTonKho.setText("Tồn kho:");

        jLabel9.setText("Chú thích:");

        txtMaSP.setEditable(false);

        txtGiaNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaNhapActionPerformed(evt);
            }
        });
        txtGiaNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGiaNhapKeyReleased(evt);
            }
        });

        txtGiaBan.setEditable(false);

        txtTonKho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTonKhoKeyReleased(evt);
            }
        });

        txtChuThichSanPham.setColumns(20);
        txtChuThichSanPham.setRows(5);
        jScrollPane1.setViewportView(txtChuThichSanPham);

        jLabel10.setText("Chiếc");

        btnDoiHinh_SanPham.setText("Image");
        btnDoiHinh_SanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiHinh_SanPhamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDoiHinh_SanPham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTonKho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblGiaBan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblGiaNhap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTenSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtMaSP)
                            .addComponent(txtTenSP)
                            .addComponent(cbbLoaiSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGiaNhap)
                            .addComponent(txtGiaBan)
                            .addComponent(cbbHangSX, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTonKho)
                            .addComponent(txtImg_SanPham)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMaSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaSP))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTenSP))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbLoaiSP))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblGiaNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtGiaNhap))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtGiaBan)
                    .addComponent(lblGiaBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbbHangSX)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTonKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTonKho)
                    .addComponent(jLabel10))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtImg_SanPham)
                    .addComponent(btnDoiHinh_SanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chung", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 153))); // NOI18N

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Loại SP", "Giá nhập", "Giá bán", "Hãng SX", "Tồn kho", "Hình ảnh", "Chú thích"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(0).setMinWidth(30);
            tblSanPham.getColumnModel().getColumn(0).setMaxWidth(30);
            tblSanPham.getColumnModel().getColumn(1).setMinWidth(60);
            tblSanPham.getColumnModel().getColumn(1).setMaxWidth(60);
            tblSanPham.getColumnModel().getColumn(2).setMinWidth(120);
            tblSanPham.getColumnModel().getColumn(2).setMaxWidth(120);
            tblSanPham.getColumnModel().getColumn(5).setHeaderValue("Giá bán");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 153))); // NOI18N

        btnThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/plus.png"))); // NOI18N
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnSuaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/updated.png"))); // NOI18N
        btnSuaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPActionPerformed(evt);
            }
        });

        btnXoaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/x-button.png"))); // NOI18N
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        btnResetSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnResetSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThemSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSuaSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetSP, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemSP)
                    .addComponent(btnSuaSP)
                    .addComponent(btnXoaSP)
                    .addComponent(btnResetSP))
                .addGap(0, 0, 0))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 153))); // NOI18N

        chkTimKiemSanPham.setText("Tìm kiếm");
        chkTimKiemSanPham.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTimKiemSanPhamItemStateChanged(evt);
            }
        });

        jLabel20.setText("Tên sản phẩm:");

        txtTenSanPhamTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenSanPhamTimKiemKeyReleased(evt);
            }
        });

        jLabel21.setText("Loại sản phẩm:");

        cbbLoaiSanPham.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbLoaiSanPhamItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTenSanPhamTimKiem))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(chkTimKiemSanPham)
                .addContainerGap(103, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbLoaiSanPham, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(chkTimKiemSanPham)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtTenSanPhamTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cbbLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hình ảnh", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 51))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(labelHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelHinhAnh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );

        btnSanPhamAn.setText("Sản phẩm bị ẩn");
        btnSanPhamAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanPhamAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSanPhamLayout = new javax.swing.GroupLayout(jPanelSanPham);
        jPanelSanPham.setLayout(jPanelSanPhamLayout);
        jPanelSanPhamLayout.setHorizontalGroup(
            jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSanPhamLayout.createSequentialGroup()
                .addGroup(jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSanPhamLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanelSanPhamLayout.createSequentialGroup()
                        .addContainerGap(44, Short.MAX_VALUE)
                        .addComponent(btnSanPhamAn, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)))
                .addGroup(jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanelSanPhamLayout.setVerticalGroup(
            jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSanPhamLayout.createSequentialGroup()
                .addGroup(jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSanPhamLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSanPhamLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelSanPhamLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnSanPhamAn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(125, 125, 125))
        );

        jtabblepaneSanPham.addTab("Sản phẩm", new javax.swing.ImageIcon(getClass().getResource("/Image/sanpham.png")), jPanelSanPham); // NOI18N

        jPanelLoaiSP.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelLoaiSPComponentShown(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin loại sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 51, 102))); // NOI18N

        jLabel2.setText("Mã loại:");

        jLabel3.setText("Tên loại:");

        txtMaLoaiSP.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaLoaiSP, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(txtTenLoaiSP))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(txtMaLoaiSP)
                        .addGap(67, 67, 67)
                        .addComponent(txtTenLoaiSP))))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin loại sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 102))); // NOI18N

        tblLoaiSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "STT", "Mã loại SP", "Tên loại SP"
            }
        ));
        tblLoaiSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoaiSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblLoaiSanPham);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 102))); // NOI18N

        tblSanPham_LoaiSp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Loại SP"
            }
        ));
        jScrollPane4.setViewportView(tblSanPham_LoaiSp);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 51))); // NOI18N

        btnThemLoaiSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/plus.png"))); // NOI18N
        btnThemLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemLoaiSPActionPerformed(evt);
            }
        });

        btnSuaLoaiSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/updated.png"))); // NOI18N
        btnSuaLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaLoaiSPActionPerformed(evt);
            }
        });

        btnXoaLoaiSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/x-button.png"))); // NOI18N
        btnXoaLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaLoaiSPActionPerformed(evt);
            }
        });

        btnResetLoaiSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnResetLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetLoaiSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThemLoaiSP)
                    .addComponent(btnXoaLoaiSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSuaLoaiSP, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnResetLoaiSP, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(35, 35, 35))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSuaLoaiSP)
                    .addComponent(btnThemLoaiSP))
                .addGap(27, 27, 27)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaLoaiSP)
                    .addComponent(btnResetLoaiSP))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanelLoaiSPLayout = new javax.swing.GroupLayout(jPanelLoaiSP);
        jPanelLoaiSP.setLayout(jPanelLoaiSPLayout);
        jPanelLoaiSPLayout.setHorizontalGroup(
            jPanelLoaiSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoaiSPLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanelLoaiSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLoaiSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88))
        );
        jPanelLoaiSPLayout.setVerticalGroup(
            jPanelLoaiSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoaiSPLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelLoaiSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanelLoaiSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(236, 236, 236))
        );

        jtabblepaneSanPham.addTab("Loại sản phẩm", new javax.swing.ImageIcon(getClass().getResource("/Image/loaisp.png")), jPanelLoaiSP); // NOI18N

        jPanePhieuNhapHang.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanePhieuNhapHangComponentShown(evt);
            }
        });

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 153))); // NOI18N

        jLabel5.setText("Mã PN:");

        jLabel6.setText("Nhân viên:");

        jLabel8.setText("Ngày nhập:");

        jLabel11.setText("Nhà Phân Phối:");

        jLabel12.setText("Tổng tiền:");

        jLabel13.setText("Chú thích:");

        txtTongTienPN.setEditable(false);

        txtMaPN.setEditable(false);

        cbbThangNhap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbThangNhapItemStateChanged(evt);
            }
        });

        cbbNamNhap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbNamNhapItemStateChanged(evt);
            }
        });
        cbbNamNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNamNhapActionPerformed(evt);
            }
        });

        txtChuThichPN.setColumns(20);
        txtChuThichPN.setRows(5);
        jScrollPane5.setViewportView(txtChuThichPN);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTongTienPN)
                    .addComponent(cbbNhaPhanPhoi, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaPN, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbbNV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(cbbNgayNhap, 0, 53, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbThangNhap, 0, 53, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbNamNhap, 0, 54, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaPN))
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbbNV)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbNgayNhap)
                    .addComponent(cbbThangNhap)
                    .addComponent(cbbNamNhap))
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbNhaPhanPhoi))
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongTienPN))
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 204))); // NOI18N

        btnThemPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/plus.png"))); // NOI18N
        btnThemPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPNActionPerformed(evt);
            }
        });

        btnSuaPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/updated.png"))); // NOI18N
        btnSuaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPNActionPerformed(evt);
            }
        });

        btnXoaPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/x-button.png"))); // NOI18N
        btnXoaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPNActionPerformed(evt);
            }
        });

        btnResetPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnResetPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnThemPN)
            .addComponent(btnSuaPN)
            .addComponent(btnXoaPN)
            .addComponent(btnResetPN)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(btnThemPN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSuaPN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaPN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetPN))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 153))); // NOI18N

        tblPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã PN", "Tên NV", "Nhà phân phối", "Ngày nhập", "Tổng tiền", "Ghi chú"
            }
        ));
        tblPhieuNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuNhapMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblPhieuNhap);
        if (tblPhieuNhap.getColumnModel().getColumnCount() > 0) {
            tblPhieuNhap.getColumnModel().getColumn(0).setMinWidth(30);
            tblPhieuNhap.getColumnModel().getColumn(0).setMaxWidth(30);
            tblPhieuNhap.getColumnModel().getColumn(1).setMinWidth(60);
            tblPhieuNhap.getColumnModel().getColumn(1).setMaxWidth(60);
            tblPhieuNhap.getColumnModel().getColumn(6).setMinWidth(70);
            tblPhieuNhap.getColumnModel().getColumn(6).setMaxWidth(70);
        }

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel14.setText("Mã CTPN:");

        jLabel15.setText("Mã PN:");

        jLabel16.setText("Sản phẩm:");

        jLabel17.setText("Số lượng:");

        jLabel18.setText("Tổng tiền:");

        jLabel19.setText("Ghi chú:");

        txtMaCTPN.setEditable(false);

        txtSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoLuongKeyReleased(evt);
            }
        });

        txtTongTienCTPN.setEditable(false);

        txtMaPNCTPN.setEditable(false);

        txtGhiChuCTPN.setColumns(20);
        txtGhiChuCTPN.setRows(5);
        jScrollPane8.setViewportView(txtGhiChuCTPN);

        cbbSanPhamCTPN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbSanPhamCTPNItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtMaCTPN)
                    .addComponent(txtMaPNCTPN)
                    .addComponent(cbbSanPhamCTPN, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSoLuong)
                    .addComponent(txtTongTienCTPN)
                    .addComponent(jScrollPane8))
                .addGap(1, 1, 1))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtMaCTPN)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaPNCTPN))
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbSanPhamCTPN))
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSoLuong))
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTongTienCTPN))
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CTPN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        btnThemCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/plus.png"))); // NOI18N
        btnThemCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCTPNActionPerformed(evt);
            }
        });

        btnSuaCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/updated.png"))); // NOI18N
        btnSuaCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCTPNActionPerformed(evt);
            }
        });

        btnXoaCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/x-button.png"))); // NOI18N
        btnXoaCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTPNActionPerformed(evt);
            }
        });

        btnResetCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnResetCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCTPNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemCTPN, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSuaCTPN, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnXoaCTPN, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnResetCTPN, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemCTPN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSuaCTPN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaCTPN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetCTPN))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết phiếu nhập hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 153))); // NOI18N

        tblCTPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã CTPN", "Mã PN", "Sản phẩm", "Số lượng", "Tổng tiền", "Ghi chú"
            }
        ));
        tblCTPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTPNMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblCTPN);
        if (tblCTPN.getColumnModel().getColumnCount() > 0) {
            tblCTPN.getColumnModel().getColumn(0).setMinWidth(30);
            tblCTPN.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Tổng Vốn :");

        txtTongVon.setEditable(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtTongVon, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTongVon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanePhieuNhapHangLayout = new javax.swing.GroupLayout(jPanePhieuNhapHang);
        jPanePhieuNhapHang.setLayout(jPanePhieuNhapHangLayout);
        jPanePhieuNhapHangLayout.setHorizontalGroup(
            jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanePhieuNhapHangLayout.createSequentialGroup()
                .addGroup(jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 264, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );
        jPanePhieuNhapHangLayout.setVerticalGroup(
            jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanePhieuNhapHangLayout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanePhieuNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanePhieuNhapHangLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(121, 121, 121))
        );

        jtabblepaneSanPham.addTab("Phiếu nhập hàng", new javax.swing.ImageIcon(getClass().getResource("/Image/PN.png")), jPanePhieuNhapHang); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabblepaneSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabblepaneSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 644, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoiHinh_SanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiHinh_SanPhamActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();

        if (evt.getSource() == btnDoiHinh_SanPham) {
            int returnVal = fc.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                String imagePath = file.getPath();
                setLabelImage(imagePath);
                txtImg_SanPham.setText(imagePath);
            } else {

            }
        }
    }//GEN-LAST:event_btnDoiHinh_SanPhamActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        int viTriDongVuaBam = tblSanPham.getSelectedRow();
        setSelectedCombobox(tblSanPham.getValueAt(viTriDongVuaBam, 3).toString(), cbbLoaiSP);
        setSelectedCombobox(tblSanPham.getValueAt(viTriDongVuaBam, 6).toString(), cbbHangSX);
        txtMaSP.setText(tblSanPham.getValueAt(viTriDongVuaBam, 1).toString());
        txtTenSP.setText(tblSanPham.getValueAt(viTriDongVuaBam, 2).toString());
        txtGiaNhap.setText(tblSanPham.getValueAt(viTriDongVuaBam, 4).toString());
        txtGiaBan.setText(tblSanPham.getValueAt(viTriDongVuaBam, 5).toString());
        txtTonKho.setText(tblSanPham.getValueAt(viTriDongVuaBam, 7).toString());
        txtChuThichSanPham.setText(tblSanPham.getValueAt(viTriDongVuaBam, 9).toString());
        try {
            if (!tblSanPham.getValueAt(viTriDongVuaBam, 8).toString().equals(""))
            {
                txtImg_SanPham.setText(tblSanPham.getValueAt(viTriDongVuaBam, 8).toString());
                setLabelImage(txtImg_SanPham.getText());
            }

        } catch (Exception e) {
            txtImg_SanPham.setText("");
        }

    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        // TODO add your handling code here:
        String TenSanPham, MaLoaiSanPham, GiaBan, HangSanXuat, TrangThai, Image, ChuThich;
        TenSanPham = txtTenSP.getText();
        MaLoaiSanPham = GetCbbSelected(cbbLoaiSP);
       
        
        String   GiaNhap =txtGiaNhap.getText();
        String TonKho = txtTonKho.getText();
        
        
            GiaBan = txtGiaBan.getText();
            HangSanXuat = GetCbbSelected(cbbHangSX);
            
            TrangThai = "1";
            ChuThich = txtChuThichSanPham.getText();
            Image = txtImg_SanPham.getText();

            String cautruyvan = "insert into SanPham "
            + "values(N'" + TenSanPham + "'," + MaLoaiSanPham + "," + HangSanXuat + "," + GiaNhap + "," + GiaBan + "," + TonKho + "," + TrangThai + ",'" + Image + "',N'" + ChuThich + "')";
            //System.out.println(cautruyvan);
            boolean kiemtra = KiemTraNhanSanPham(0);
            if (kiemtra)
            {
                cnn.ExcuteQueryUpdateDB(cautruyvan);
                ResSanPham();
                ThongBao("Đã thêm thành công", "Thông báo", 2);
                System.out.println("Đã Thêm Thành Công");
            }
            else
            {
                ThongBao("Thêm thất bại", "Thông báo", 2);
                System.out.println("Thất Bại");
            }
            LayDuLieuSanPham("2");
    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnSuaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPActionPerformed
        // TODO add your handling code here:
        String MaSanPham, TenSanPham, LoaiSanPham, GiaNhap, GiaBan, HangSanXuat, TonKho, TrangThai, Image, ChuThich;
        MaSanPham = txtMaSP.getText();
        TenSanPham = txtTenSP.getText();
        LoaiSanPham = GetCbbSelected(cbbLoaiSP);
        GiaNhap = txtGiaNhap.getText();
        GiaBan = txtGiaBan.getText();
        HangSanXuat = GetCbbSelected(cbbHangSX);
        TonKho = txtTonKho.getText();
        TrangThai = "1";
        Image = txtImg_SanPham.getText();

        ChuThich = txtChuThichSanPham.getText();
        String cautruyvan = "update  SanPham set "
        + "TenSanPham =" + "N'" + TenSanPham + "',LoaiSanPham=" + LoaiSanPham + ",HangSanXuat="
        + HangSanXuat + ",GiaNhap=" + GiaNhap + ",GiaBan=" + GiaBan + ",TonKho=" + TonKho
        + ",TrangThai=" + TrangThai + ",Image='" + Image + "',ChuThich =N'" + ChuThich + "' where MaSanPham=" + MaSanPham;
        //System.out.println(cautruyvan);
        boolean kiemtra = KiemTraNhanSanPham(1);
        if (kiemtra)
        {
            cnn.ExcuteQueryUpdateDB(cautruyvan);
            ResSanPham();
            ThongBao("Đã sửa sản phẩm thành công", "Thông báo", 2);
            //System.out.println("Đã Sửa Thành Công Sản Phẩm");
        }
        else
        {
            System.out.println("Thất Bại");
        }
        LayDuLieuSanPham("1");
    }//GEN-LAST:event_btnSuaSPActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        // TODO add your handling code here:
        frmAnSanPham frman = new frmAnSanPham(txtMaSP.getText());
        frman.show();
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void btnResetSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetSPActionPerformed
        // TODO add your handling code here:
        ResSanPham();
    }//GEN-LAST:event_btnResetSPActionPerformed

    private void chkTimKiemSanPhamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTimKiemSanPhamItemStateChanged
        // TODO add your handling code here:
        if (chkTimKiemSanPham.isSelected())
        {
            LayDuLieuSanPham("1");
        }
        if (!chkTimKiemSanPham.isSelected())
        {
            LayDuLieuSanPham("1");
        }
    }//GEN-LAST:event_chkTimKiemSanPhamItemStateChanged

    private void txtTenSanPhamTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenSanPhamTimKiemKeyReleased
        // TODO add your handling code here:
        if (chkTimKiemSanPham.isSelected())
        {
            TimKiemSanPham("TenSanPham like N'%" + txtTenSanPhamTimKiem.getText() + "%'");
            ResSanPham();
        }
    }//GEN-LAST:event_txtTenSanPhamTimKiemKeyReleased

    private void cbbLoaiSanPhamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbLoaiSanPhamItemStateChanged
        // TODO add your handling code here:
        if (chkTimKiemSanPham.isSelected())
        {
            TimKiemSanPham("LoaiSanPham= " + GetCbbSelected(cbbLoaiSanPham));
            ResSanPham();
        }
    }//GEN-LAST:event_cbbLoaiSanPhamItemStateChanged

    private void btnSanPhamAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanPhamAnActionPerformed
        // TODO add your handling code here:
        frmSanPhamAn aa = new frmSanPhamAn();
        aa.show();
    }//GEN-LAST:event_btnSanPhamAnActionPerformed

    private void jPanelSanPhamComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSanPhamComponentShown
        // TODO add your handling code here:
        LayDuLieuSanPham("1");

        cbbLoaiSP.setModel(LayDuLieucbb("LoaiSanPham", "TenLoaiSanPham", "MaLoaiSanPham"));
        cbbHangSX.setModel(LayDuLieucbb("HangSanXuat", "TenHangSanXuat", "MaHangSanXuat"));
        cbbLoaiSanPham.setModel(LayDuLieucbb("LoaiSanPham", "TenLoaiSanPham", "MaLoaiSanPham"));
    }//GEN-LAST:event_jPanelSanPhamComponentShown

    private void tblLoaiSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiSanPhamMouseClicked
        // TODO add your handling code here:
        int viTriDongVuaBam = tblLoaiSanPham.getSelectedRow();
        txtMaLoaiSP.setText(tblLoaiSanPham.getValueAt(viTriDongVuaBam, 1).toString());
        txtTenLoaiSP.setText(tblLoaiSanPham.getValueAt(viTriDongVuaBam, 2).toString());

        LayDuLieuSanPhamofLoaiSanPham(txtMaLoaiSP.getText());
    }//GEN-LAST:event_tblLoaiSanPhamMouseClicked

    private void btnThemLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemLoaiSPActionPerformed
        // TODO add your handling code here:
        String MaLoaiSanPham, TenLoai;
        MaLoaiSanPham = txtMaLoaiSP.getText();
        TenLoai = txtTenLoaiSP.getText();
        String cautruyvan = "insert into LoaiSanPham values("
        + " N'" + TenLoai + "')";
        System.out.println(cautruyvan);
        boolean kiemtra = true;
        if (!txtTenLoaiSP.equals("")) {
            cnn.ExcuteQueryUpdateDB(cautruyvan);

            ThongBao("Thêm thành công","Thông báo",1);

        } else {
            ThongBao("Bạn chưa nhập tên loại sản phẩm", "Thông báo", 2);
        }
        layDuLieuLoaiSanPham();
    }//GEN-LAST:event_btnThemLoaiSPActionPerformed

    private void btnSuaLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaLoaiSPActionPerformed
        // TODO add your handling code here:
        String MaLoaiSanPham, TenLoai;
        MaLoaiSanPham = txtMaLoaiSP.getText();
        TenLoai = txtTenLoaiSP.getText();
        String cautruyvan = "update LoaiSanPham set"
        + " TenLoaiSanPham=N'" + TenLoai + "'where MaLoaiSanPham=" + MaLoaiSanPham;
        if (!txtTenLoaiSP.equals("")) {
            cnn.ExcuteQueryUpdateDB(cautruyvan);
            ThongBao("Đã sửa Thành Công", "Thông báo", 2);

        } else {
            ThongBao("Bạn chưa nhập tên loại sản phẩm", "Thông báo", 2);
        }
        layDuLieuLoaiSanPham();
    }//GEN-LAST:event_btnSuaLoaiSPActionPerformed

    private void btnXoaLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaLoaiSPActionPerformed
        // TODO add your handling code here:
        String Maloai = txtMaLoaiSP.getText();
        if(!Maloai.equals(""))
        {
            String cautruyvan = "delete LoaiSanPham where MaLoaiSanPham=" + Maloai;
            cnn.ExcuteQueryUpdateDB(cautruyvan);
            ThongBao("Đã xóa Thành Công", "Thông báo", 2);

            layDuLieuLoaiSanPham();
        }
    }//GEN-LAST:event_btnXoaLoaiSPActionPerformed

    private void btnResetLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetLoaiSPActionPerformed
        // TODO add your handling code here:
        txtMaLoaiSP.setText("");
        txtTenLoaiSP.setText("");
    }//GEN-LAST:event_btnResetLoaiSPActionPerformed

    private void jPanelLoaiSPComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelLoaiSPComponentShown
        // TODO add your handling code here:
        layDuLieuLoaiSanPham();

    }//GEN-LAST:event_jPanelLoaiSPComponentShown

    private void cbbThangNhapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbThangNhapItemStateChanged
        // TODO add your handling code here:
        String thang = cbbThangNhap.getSelectedItem().toString();
        DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel();
        String thanght;
        if (tam == 0) {
            thanght = "0";
        } else {
            thanght = cbbNgayNhap.getSelectedItem().toString();
        }
        tam = 1;

        if (thang.equals("4") || thang.equals("6") || thang.equals("9") || thang.equals("11")) {
            cbbNgayNhap.setModel(cbbmodel);
            for (int i = 1; i < 31; i++) {
                cbbNgayNhap.addItem(String.valueOf(i));
            }
            if (Integer.valueOf(thanght) < 31) {
                cbbNgayNhap.setSelectedItem(thanght);
            }
        } else if (thang.equals("1") || thang.equals("3") || thang.equals("5")
            || thang.equals("7") || thang.equals("8") || thang.equals("12") || thang.equals("10")) {

            cbbNgayNhap.setModel(cbbmodel);
            for (int i = 1; i < 32; i++) {
                cbbNgayNhap.addItem(String.valueOf(i));
            }
            if (Integer.valueOf(thanght) < 32) {
                cbbNgayNhap.setSelectedItem(thanght);
            }
        }
        else if((Integer.parseInt(cbbNamNhap.getSelectedItem().toString())%4==0&&
            (Integer.parseInt(cbbNamNhap.getSelectedItem().toString())%100!=0)||
            Integer.parseInt(cbbNamNhap.getSelectedItem().toString())%400==0)&&thang.equals("2"))
    {
        cbbNgayNhap.setModel(cbbmodel);
        for (int i = 1; i < 30; i++) {
            cbbNgayNhap.addItem(String.valueOf(i));
        }
        if (Integer.valueOf(thanght) < 30) {
            cbbNgayNhap.setSelectedItem(thanght);
        }
        }
        else {
            cbbNgayNhap.setModel(cbbmodel);
            for (int i = 1; i < 29; i++) {
                cbbNgayNhap.addItem(String.valueOf(i));
            }
            if (Integer.valueOf(thanght) < 29) {
                cbbNgayNhap.setSelectedItem(thanght);
            }
        }
    }//GEN-LAST:event_cbbThangNhapItemStateChanged

    private void cbbNamNhapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbNamNhapItemStateChanged
        // TODO add your handling code here:
        String thang = cbbThangNhap.getSelectedItem().toString();
        DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel();
        String thanght;
        if (tam == 0) {
            thanght = "0";
        } else {
            thanght = cbbNgayNhap.getSelectedItem().toString();
        }
        tam = 1;

        if (thang.equals("4") || thang.equals("6") || thang.equals("9") || thang.equals("11")) {
            cbbNgayNhap.setModel(cbbmodel);
            for (int i = 1; i < 31; i++) {
                cbbNgayNhap.addItem(String.valueOf(i));
            }
            if (Integer.valueOf(thanght) < 31) {
                cbbNgayNhap.setSelectedItem(thanght);
            }
        } else if (thang.equals("1") || thang.equals("3") || thang.equals("5")
            || thang.equals("7") || thang.equals("8") || thang.equals("12") || thang.equals("10")) {

            cbbNgayNhap.setModel(cbbmodel);
            for (int i = 1; i < 32; i++) {
                cbbNgayNhap.addItem(String.valueOf(i));
            }
            if (Integer.valueOf(thanght) < 32) {
                cbbNgayNhap.setSelectedItem(thanght);
            }
        }
        else if((Integer.parseInt(cbbNamNhap.getSelectedItem().toString())%4==0&&
            (Integer.parseInt(cbbNamNhap.getSelectedItem().toString())%100!=0)||
            Integer.parseInt(cbbNamNhap.getSelectedItem().toString())%400==0)&&thang.equals("2"))
    {
        cbbNgayNhap.setModel(cbbmodel);
        for (int i = 1; i < 30; i++) {
            cbbNgayNhap.addItem(String.valueOf(i));
        }
        if (Integer.valueOf(thanght) < 30) {
            cbbNgayNhap.setSelectedItem(thanght);
        }
        }
        else {
            cbbNgayNhap.setModel(cbbmodel);
            for (int i = 1; i < 29; i++) {
                cbbNgayNhap.addItem(String.valueOf(i));
            }
            if (Integer.valueOf(thanght) < 29) {
                cbbNgayNhap.setSelectedItem(thanght);
            }
        }
    }//GEN-LAST:event_cbbNamNhapItemStateChanged

    private void btnThemPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPNActionPerformed
        // TODO add your handling code here:
        String MaPhieuNhap, MaNhanVien, MaNhaPhanPhoi, TongTien, NgayNhap, ChuThich;
        MaPhieuNhap = txtMaPN.getText();
        MaNhanVien = GetCbbSelected(cbbNV);
        MaNhaPhanPhoi = GetCbbSelected(cbbNhaPhanPhoi);
        String ngay, thang, nam;
        ngay = cbbNgayNhap.getSelectedItem().toString();
        thang = cbbThangNhap.getSelectedItem().toString();
        nam = cbbNamNhap.getSelectedItem().toString();
        NgayNhap = nam + "-" + thang + "-" + ngay;
        TongTien = txtTongTienPN.getText();
        ChuThich = txtChuThichPN.getText();
        String cautruyvan = "insert into PhieuNhap values(" + " " + MaNhanVien + " , " + MaNhaPhanPhoi + " ," + 0 + ",'" + NgayNhap + "', N'" + ChuThich + "')";
        System.out.println(cautruyvan);
        boolean kiemtra = true;
        /*if(txtTongTienPN.getText().equals("")){
            txtTongTienPN.setText("0");
            TongTien="0";
        }*/
        if (kiemtra) {
            cnn.ExcuteQueryUpdateDB(cautruyvan);
            ResPN();
            ThongBao("Đã thêm phiếu nhập thành công", "Thông báo", 2);
        } else {
            ThongBao("Không thể Thêm Khách Hàng", "lỗi", 2);
        }
        LayDuLieuPhieuNhap();
    }//GEN-LAST:event_btnThemPNActionPerformed

    private void btnSuaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPNActionPerformed
        // TODO add your handling code here:
        String MaPhieuNhap, MaNhanVien, MaNhaPhanPhoi, TongTien, NgayNhap, ChuThich;
        MaPhieuNhap = txtMaPN.getText();
        MaNhanVien = GetCbbSelected(cbbNV);
        MaNhaPhanPhoi = GetCbbSelected(cbbNhaPhanPhoi);
        String ngay, thang, nam;
        ngay = cbbNgayNhap.getSelectedItem().toString();
        thang = cbbThangNhap.getSelectedItem().toString();
        nam = cbbNamNhap.getSelectedItem().toString();
        NgayNhap = nam + "-" + thang + "-" + ngay;
        TongTien = txtTongTienPN.getText();
        ChuThich = txtChuThichPN.getText();
        String cautruyvan = "update  PhieuNhap set "
        + " MaNhanVien= " + MaNhanVien + " , MaNhaPhanPhoi=" + MaNhaPhanPhoi + " ,TongTien=" + TongTien
        + ",NgayNhap='" + NgayNhap + "', ChuThich=N'" + ChuThich + "'where MaPhieuNhap=" + MaPhieuNhap;
        System.out.println(cautruyvan);
        boolean kiemtra = true;
        if (!txtMaPN.equals(""))
        {
            cnn.ExcuteQueryUpdateDB(cautruyvan);
            ResPN();
            ThongBao("Sửa thành công", "Thông báo", 2);
        }
        else
        {
            ThongBao("Bạn chọn phiếu nhập!", "lỗi", 2);
        }
        LayDuLieuPhieuNhap();
    }//GEN-LAST:event_btnSuaPNActionPerformed

    private void btnXoaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPNActionPerformed
        // TODO add your handling code here:
        if (!txtMaPN.getText().equals("")) {
            String MaPhieuNhap = txtMaPN.getText();
            String cautruyvan = "delete PhieuNhap where MaPhieuNhap=" + MaPhieuNhap;
            String ctvKiemThu = "select count(MaCTPN) as SoChiTietPhieuMua"
            + " from PhieuNhap,ChiTietPhieuNhap where PhieuNhap.MaPhieuNhap=ChiTietPhieuNhap.MaPhieuNhap and "
            + "PhieuNhap.MaPhieuNhap= " + MaPhieuNhap;
            ResultSet rs1 = cnn.ExcuteQueryGetTable(ctvKiemThu);
            System.out.println(ctvKiemThu);
            int so1 = 0;
            try {
                if (rs1.next()) {
                    so1 = rs1.getInt("SoChiTietPhieuMua");
                    if (rs1.getInt("SoChiTietPhieuMua") == 0) {
                        cnn.ExcuteQueryUpdateDB(cautruyvan);
                        ResPN();
                        ThongBao("Xóa thành công", "Thông báo", 2);
                        LayDuLieuPhieuNhap();
                    } else {
                        ThongBao("không thể xóa bởi Phiếu nhập đã có " + so1 + " chi tiết Phiếu nhập!", "báo lỗi", 2);
                    }
                }
            } catch (SQLException ex) {
                //Logger.getLogger(frmTrangChu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ThongBao("bạn chưa chọn Phiếu nhập để xóa", "xóa bằng niềm tin à!khi không biết xóa cái nào", 2);
        }
    }//GEN-LAST:event_btnXoaPNActionPerformed

    private void btnResetPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPNActionPerformed
        // TODO add your handling code here:
        String MaPhieuNhap, TongTien, NgayLap, ChuThich;
        txtMaPN.setText("");
        cbbNV.setSelectedIndex(1);
        cbbNgayNhap.setSelectedIndex(1);
        cbbThangNhap.setSelectedIndex(1);
        cbbNamNhap.setSelectedIndex(1);
        
        txtTongTienPN.setText("");
        txtChuThichPN.setText("");

    }//GEN-LAST:event_btnResetPNActionPerformed

    private void tblPhieuNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuNhapMouseClicked
        // TODO add your handling code here:
        int viTriDongVuaBam = tblPhieuNhap.getSelectedRow();
        txtMaPN.setText(tblPhieuNhap.getValueAt(viTriDongVuaBam, 1).toString());
        txtTongTienPN.setText(tblPhieuNhap.getValueAt(viTriDongVuaBam, 4).toString());
        txtChuThichPN.setText(tblPhieuNhap.getValueAt(viTriDongVuaBam, 6).toString());
        setSelectedCombobox(tblPhieuNhap.getValueAt(viTriDongVuaBam, 3).toString(), cbbNhaPhanPhoi);
        setSelectedCombobox(tblPhieuNhap.getValueAt(viTriDongVuaBam, 2).toString(), cbbNV);

        LayDuLieuChiTietPhieuNhap(txtMaPN.getText());
        String ngaynhap = tblPhieuNhap.getValueAt(viTriDongVuaBam, 5).toString();
        //System.out.println("" + ngaynhap);
        String strngay, strthang, strnam;
        strngay = ngaynhap.substring(8, 10);
        strthang = ngaynhap.substring(5, 7);
        strnam = ngaynhap.substring(0, 4);
        int ngay, thang, nam;
        ngay = Integer.valueOf(strngay);
        thang = Integer.valueOf(strthang);
        nam = Integer.valueOf(strnam);
        cbbNgayNhap.setSelectedItem(String.valueOf(ngay));
        cbbThangNhap.setSelectedItem(String.valueOf(thang));
        cbbNamNhap.setSelectedItem(String.valueOf(nam));
        txtMaPNCTPN.setText(tblPhieuNhap.getValueAt(viTriDongVuaBam, 1).toString());
    }//GEN-LAST:event_tblPhieuNhapMouseClicked

    private void txtSoLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoLuongKeyReleased
        // TODO add your handling code here:
        int SoLuong = 0;
        long Tien = 0;
        int Gia = GetGiaSanPham(GetCbbSelected(cbbSanPhamCTPN));
        try {
            SoLuong = Integer.valueOf(txtSoLuong.getText());
        } catch (NumberFormatException e) {
            ThongBao("Số lượng là số", "Thông báo", 2);
        }
        
        Tien = (long) Gia * SoLuong;
        
        txtTongTienCTPN.setText(String.valueOf(Tien));
         
        
    }//GEN-LAST:event_txtSoLuongKeyReleased

    private void cbbSanPhamCTPNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbSanPhamCTPNItemStateChanged
        // TODO add your handling code here:
        int SoLuong = 0;
        long Tien = 0;
        try {
            SoLuong = Integer.valueOf(txtSoLuong.getText());
        } catch (Exception e) {
        }
        int Gia = GetGiaSanPham(GetCbbSelected(cbbSanPhamCTPN));
        Tien = (long) Gia * SoLuong;
        txtTongTienCTPN.setText(String.valueOf(Tien));
    }//GEN-LAST:event_cbbSanPhamCTPNItemStateChanged

    private void btnThemCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCTPNActionPerformed
        // TODO add your handling code here:
        String MaCTPN,MaPhieuNhap,MaSanPham,SoLuong,TongTien,ChuThich,MaIMEI;
        MaCTPN = txtMaCTPN.getText();
        MaPhieuNhap = txtMaPNCTPN.getText();
        MaSanPham = GetCbbSelected(cbbSanPhamCTPN);
        SoLuong = txtSoLuong.getText();
        TongTien = txtTongTienCTPN.getText();
        ChuThich = txtGhiChuCTPN.getText();
        long Von = getVon();
        if(Long.valueOf(TongTien)>Von)
        {
            ThongBao("Không đủ vốn", "Thông báo", 1);
        }
        else
        {
            String tb="", cautruyvan = "insert into ChiTietPhieuNhap(MaPhieuNhap,MaSanPham,SoLuong,TongTien,ChuThich)"
                    + "values("+MaPhieuNhap+","+MaSanPham+","+SoLuong+","+TongTien+",N'"+ChuThich+"')";
            System.out.println(cautruyvan);

            boolean kiemtra = true;
            if(txtSoLuong.equals("")){
                tb+="Chưa nhập Số lượng";
                kiemtra=false;}
            try {
                int bien= Integer.valueOf(txtSoLuong.getText());

            } catch (Exception e) {
                kiemtra=false;
                tb+="Số lượng phải nhập bằng số";
            }
            if (!txtMaPNCTPN.equals("") && kiemtra==true) {

                cnn.ExcuteQueryUpdateDB(cautruyvan);
                System.out.println("Đã Thêm Thành Công");
            } else {
                ThongBao("Không thể Thêm ", "lỗi", 2);
            }
            LayDuLieuChiTietPhieuNhap(MaPhieuNhap);
            SetTongTien(MaPhieuNhap);

            //-------------------
            String ctv5 = "select * from Von";
            System.out.println(ctv5);
            ResultSet rs5 = cnn.ExcuteQueryGetTable(ctv5);
            try {
                while(rs5.next())
                {
                    long Von1 = rs5.getLong("TongVon");
                    Von1  = Von1 - Long.valueOf(TongTien);

                    String ctv6 = "update Von set TongVon = "+Von1+"";
                    cnn.ExcuteQueryUpdateDB(ctv6);
                    LaydulieuVon();
                }
            } catch (SQLException ex) {
                Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            //-----------------------------------------------
            String ctv = "seLect * from SanPham where MaSanPham = "+MaSanPham;
            ResultSet rs = cnn.ExcuteQueryGetTable(ctv);
            try {
                while(rs.next())
                {
                    int SL = rs.getInt("TonKho");
                    SL = SL + Integer.valueOf(SoLuong);
                    String ctv1 = "update SanPham set TonKho = "+SL+" where MaSanPham = "+MaSanPham;
                    cnn.ExcuteQueryUpdateDB(ctv1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

            txtMaCTPN.setText("");


            txtSoLuong.setText("");
            txtTongTienCTPN.setText("");
            txtGhiChuCTPN.setText("");
        }
    }//GEN-LAST:event_btnThemCTPNActionPerformed

    private void btnSuaCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCTPNActionPerformed
        // TODO add your handling code here:
        String MaCTPN,MaPhieuNhap,MaSanPham,SoLuong,TongTien,ChuThich,MaIMEI;
        MaCTPN=txtMaCTPN.getText();
        if(MaCTPN.equals(""))
        {
            ThongBao("Vui lòng chọn CTPN cần sửa", "Thông báo", 2);
        }
        else{
            MaPhieuNhap=txtMaPNCTPN.getText();
            MaSanPham=GetCbbSelected(cbbSanPhamCTPN);
            
            // Kiem tra su thay doi cua so luong san pham
            SoLuong=txtSoLuong.getText();          
            int SoLuong1 = Integer.valueOf(SoLuong);
            String ctv = "select * from ChiTietPhieuNhap where MaCTPN = "+MaCTPN;
            ResultSet rs1 = cnn.ExcuteQueryGetTable(ctv);
            int SL = 0;
            long Tong = 0;
            try {
                while(rs1.next())
                {
                    SL = rs1.getInt("SoLuong");
                    Tong = rs1.getLong("TongTien");
                }
            } catch (SQLException ex) {
                Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            int SLS = 0;
            if(SL > SoLuong1)
            {
                SLS = SL - SoLuong1; // nếu giảm sl thì tồn kho + thêm phần dư
                
            }else if(SL<SoLuong1)
            {
                SLS = SL-SoLuong1; //nếu tăng sl thì tồn kho sẽ - đi phần dư
                
            }else
            {
                SLS = 0;
                
            }
            // Thuc hien viec update lai so luong san pham trong kho
            String ctv2 = "select * from SanPham where MaSanPham = "+MaSanPham;
            ResultSet rs2 = cnn.ExcuteQueryGetTable(ctv2);
            int TonKho = 0;
            try {
                while(rs2.next())
                {
                    TonKho = rs2.getInt("TonKho");
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            TonKho = TonKho - SLS;
            String ctv3 = "update SanPham set TonKho = "+TonKho+" where MaSanPham = "+MaSanPham;
            cnn.ExcuteQueryUpdateDB(ctv3);
        
            // Kiem tra su thay doi von dau tu
            TongTien=txtTongTienCTPN.getText();
            long Tong1 = Long.valueOf(TongTien);
            
            
            
            ChuThich=txtGhiChuCTPN.getText();
            String tb = "", cautruyvan = "update ChiTietPhieuNhap set MaSanPham = " + MaSanPham + " ,SoLuong = " + SoLuong+ ",TongTien = " + TongTien + ", ChuThich = N'" + ChuThich + "' where MaCTPN = "+ MaCTPN;
            System.out.println(cautruyvan);
            boolean kiemtra = true;
            if(txtSoLuong.equals(""))
            {
                tb+="Chưa nhập Số lượng";
                kiemtra=false;
            }
            try
            {
                int bien= Integer.valueOf(txtSoLuong.getText());
            } catch (Exception e)
            {
                kiemtra=false;
                tb+="Số lượng phải nhập bằng số";
            }
            if (!txtMaPNCTPN.equals("") && kiemtra==true)
            {
                cnn.ExcuteQueryUpdateDB(cautruyvan);
                ResCTPN();
                ThongBao("Đã sửa thành công", "Thông báo", 2);
                //Kiemtra thay doi Von
                String ctv5 = "select * from Von";
                System.out.println(ctv5);
                ResultSet rs5 = cnn.ExcuteQueryGetTable(ctv5);
                try {
                    while(rs5.next())
                    {
                        long Von = rs5.getLong("TongVon");
                        if(Tong<Tong1) //so luong tang
                        {
                            long Tongmoi = Tong1 -Tong;
                            Von  = Von - Tongmoi;
                            String ctv6 = "update Von set TongVon = "+Von+"";
                            cnn.ExcuteQueryUpdateDB(ctv6);
                            LaydulieuVon();
                        }
                        if(Tong>Tong1)//so luong giam
                        {
                            long Tongmoi = Tong - Tong1;
                            Von  = Von + Tongmoi;
                            String ctv6 = "update Von set TongVon = "+Von+"";
                            cnn.ExcuteQueryUpdateDB(ctv6);
                            LaydulieuVon();
                        }

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                ThongBao("Không thể Thêm ", "lỗi", 2);
            }
            LayDuLieuChiTietPhieuNhap(MaPhieuNhap);
            SetTongTien(MaPhieuNhap);
        }
        
    }//GEN-LAST:event_btnSuaCTPNActionPerformed

    private void btnXoaCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTPNActionPerformed
        // TODO add your handling code here:
        String MaCTPN = txtMaCTPN.getText();
        String MaPN = txtMaPNCTPN.getText();
        String TongTien = txtTongTienCTPN.getText();
        long Tong = Long.valueOf(TongTien);
        String MaSanPham=GetCbbSelected(cbbSanPhamCTPN);
        String SoLuong=txtSoLuong.getText();
        int SL = Integer.valueOf(SoLuong);
        if(MaCTPN.equals(""))
        {
            ThongBao("Bạn chưa chọn chi tiết phiếu nhập cần xóa", "Thông báo", 2);
        }
        else
        {
            String cautruyvan = "delete ChiTietPhieuNhap where MaCTPN = " + MaCTPN;
            cnn.ExcuteQueryUpdateDB(cautruyvan);

            System.out.println(cautruyvan);
            ThongBao("Đã xóa thành công", "Thông báo", 2);
            
            String ctv3 = "select * from SanPham where MaSanPham = " + MaSanPham;
            ResultSet rs3 = cnn.ExcuteQueryGetTable(ctv3);
            int SLT = 0 ;
            try {
                while(rs3.next())
                {
                    SLT = rs3.getInt("TonKho");
                }
            } catch (SQLException ex) {
                Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            SLT= SLT - SL;
            String ctv2 = "update SanPham set TonKho = "+SLT+"where MaSanPham = "+MaSanPham;
            cnn.ExcuteQueryUpdateDB(ctv2);
            
            String ctv5 = "select * from Von";
            System.out.println(ctv5);
            ResultSet rs5 = cnn.ExcuteQueryGetTable(ctv5);
            try {
                while(rs5.next())
                {
                    long Von = rs5.getLong("TongVon");
                    Von = Von + Tong;  
                    String ctv6 = "update Von set TongVon = "+Von+"";
                    cnn.ExcuteQueryUpdateDB(ctv6);
                    LaydulieuVon();

                }
            } catch (SQLException ex) {
                Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            LayDuLieuChiTietPhieuNhap(MaPN);
            SetTongTien(MaPN);
        }
        txtMaCTPN.setText("");
        txtMaPNCTPN.setText("");
        cbbSanPhamCTPN.setSelectedIndex(1);
        txtSoLuong.setText("");
        txtTongTienCTPN.setText("");
        txtGhiChuCTPN.setText("");
    }//GEN-LAST:event_btnXoaCTPNActionPerformed

    private void btnResetCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCTPNActionPerformed
        // TODO add your handling code here:
        txtMaCTPN.setText("");
        txtMaPNCTPN.setText("");
        cbbSanPhamCTPN.setSelectedIndex(1);
        txtSoLuong.setText("");
        txtTongTienCTPN.setText("");
        txtGhiChuCTPN.setText("");
        
    }//GEN-LAST:event_btnResetCTPNActionPerformed

    private void tblCTPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTPNMouseClicked
        // TODO add your handling code here:
        int viTriDongVuaBam = tblCTPN.getSelectedRow();
        txtMaCTPN.setText(tblCTPN.getValueAt(viTriDongVuaBam, 1).toString());
        txtMaPNCTPN.setText(tblCTPN.getValueAt(viTriDongVuaBam, 2).toString());
        setSelectedCombobox(tblCTPN.getValueAt(viTriDongVuaBam, 3).toString(), cbbSanPhamCTPN);
        txtSoLuong.setText(tblCTPN.getValueAt(viTriDongVuaBam, 4).toString());
        txtTongTienCTPN.setText(tblCTPN.getValueAt(viTriDongVuaBam, 5).toString());
        txtGhiChuCTPN.setText(tblCTPN.getValueAt(viTriDongVuaBam, 6).toString());
    }//GEN-LAST:event_tblCTPNMouseClicked

    private void jPanePhieuNhapHangComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanePhieuNhapHangComponentShown
        // TODO add your handling code here:
        LayDuLieuPhieuNhap();
        cbbNhaPhanPhoi.setModel(LayDuLieucbb("NhaPhanPhoi", "TenNhaPhanPhoi", "MaNhaPhanPhoi"));
        cbbNV.setModel(LayDuLieucbb("NhanVien", "TenNhanVien", "MaNhanVien"));
        cbbSanPhamCTPN.setModel(LayDuLieucbb("SanPham","TenSanPham","MaSanPham"));
        for (int i = 1; i < 32; i++) {
            cbbNgayNhap.addItem(String.valueOf(i));
        }
        for (int i = 1; i < 13; i++) {
            cbbThangNhap.addItem(String.valueOf(i));
        }
        for (int i = 2022; i > 1950; i--) {
            cbbNamNhap.addItem(String.valueOf(i));
        }
        cbbNgayNhap.setSelectedItem(String.valueOf(day));
        cbbThangNhap.setSelectedItem(String.valueOf(month));
        cbbNamNhap.setSelectedItem(String.valueOf(year));
    }//GEN-LAST:event_jPanePhieuNhapHangComponentShown

    private void txtGiaNhapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiaNhapKeyReleased
        // TODO add your handling code here:
        String MaSanPham = txtMaSP.getText();
        String ctv = "select * from GiamDoc";
        ResultSet rs = cnn.ExcuteQueryGetTable(ctv);
        try {
            while(rs.next())
            {
                Date Ngay = rs.getDate("NgayApDungMoi");
                Calendar c1 = Calendar.getInstance();
                c1.setTime(Ngay);
                float giacu = rs.getFloat("GiaBanCu");
                float giamoi = rs.getFloat("GiaBanMoi");
                if(MaSanPham.equals(""))
                {
                    try{
                        long GiaBan = (long) (Long.valueOf(txtGiaNhap.getText())*giamoi);
                        txtGiaBan.setText(GiaBan+"");
                    }catch(NumberFormatException nn)
                    {
                        ThongBao("Giá nhập là số", "Thông báo", 2);
                    }
                }
                else
                {
                    String ctv2 = "select SanPham.TenSanPham,SanPham.GiaNhap,PhieuNhap.NgayNhap "
                            + "from SanPham,PhieuNhap,ChiTietPhieuNhap "
                            + "where SanPham.MaSanPham = ChiTietPhieuNhap.MaSanPham  "
                            + "and PhieuNhap.MaPhieuNhap = ChiTietPhieuNhap.MaPhieuNhap "
                            + "and SanPham.MaSanPham = "+Integer.valueOf(MaSanPham);
                    ResultSet rs2 = cnn.ExcuteQueryGetTable(ctv2);
                    while(rs2.next())
                    {
                        String Ngaynhap = rs2.getString("NgayNhap");
                        
                        
                        Calendar c2 = Calendar.getInstance();
                        c2.setTime(Date.valueOf(Ngaynhap));
                        if(c2.before(c1)==true)
                        {
                            long GiaBan = (long) (Long.valueOf(txtGiaNhap.getText())*giacu);
                            txtGiaBan.setText(GiaBan+"");
                        }else
                        {
                            long GiaBan = (long) (Long.valueOf(txtGiaNhap.getText())*giamoi);
                            txtGiaBan.setText(GiaBan+"");
                        }
                        
                    }
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_txtGiaNhapKeyReleased

    private void txtTonKhoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTonKhoKeyReleased
        // TODO add your handling code here:
        try{
            Integer.valueOf(txtTonKho.getText());
            
        }catch(NumberFormatException nn)
        {
            ThongBao("Số lượng là số", "Thông báo", 2);
        }
    }//GEN-LAST:event_txtTonKhoKeyReleased

    private void txtGiaNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaNhapActionPerformed

    private void cbbNamNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNamNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbNamNhapActionPerformed

    public int GetGiaSanPham(String MaSP) {
        int Gia = 0;
        String cautruyvan = "select * from SanPham where MaSanPham=" + MaSP;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        try {
            if (rs.next()) {
                Gia = rs.getInt("Giaban");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return Gia;
    }
    public void TimKiemSanPham(String wheretk) 
    {
        String cautruyvan = "";

        cautruyvan = "select * from SanPham,LoaiSanPham,HangSanXuat "
                + "where SanPham.LoaiSanPham=LoaiSanPham.MaLoaiSanPham and SanPham.HangSanXuat = HangSanXuat.MaHangSanXuat and " + wheretk;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"STT", "Mã SP", "Tên SP", "Loại SP", "Giá Nhập", "Giá Bán", "Hãng SX", "Tồn kho","Hình ảnh", "Chú thích"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblSanPham.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) {
                c++;
                Object[] item = new Object[10];
                item[0] = c;
                item[1] = rs.getInt("MaSanPham");
                item[2] = rs.getString("TenSanPham");
                item[3] = rs.getString("TenLoaiSanPham");
                item[4] = rs.getString("GiaNhap");
                item[5] = rs.getString("GiaBan");
                item[6] = rs.getString("TenHangSanXuat");
                item[7] = rs.getString("TonKho");
                item[8] = rs.getString("Image");
                item[9] = rs.getString("ChuThich");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //--------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------
    public void SetTongTien(String MaPhieuNhap) 
    {
        String cautruyvan = "select sum(ChiTietPhieuNhap.TongTien) as TongTienHienTai,PhieuNhap.MaPhieuNhap from PhieuNhap,ChiTietPhieuNhap "
                + "where PhieuNhap.MaPhieuNhap = ChiTietPhieuNhap.MaPhieuNhap"
                + " and PhieuNhap.MaPhieuNhap = " + MaPhieuNhap + "group by PhieuNhap.MaPhieuNhap";
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        
        
        try {
            
            if (rs.next()) 
            {
                long ttht = rs.getLong("TongTienHienTai");
                txtTongTienPN.setText(String.valueOf(ttht));
                String ctv = "update PhieuNhap set TongTien= " + ttht + "where MaPhieuNhap=" + MaPhieuNhap;
                System.out.println(ctv);
                cnn.ExcuteQueryUpdateDB(ctv);
                LayDuLieuPhieuNhap();
                
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        String ctv = "select count(MaPhieuNhap) as Sodong from ChiTietPhieuNhap where MaPhieuNhap = " + MaPhieuNhap;
        ResultSet rs1 = cnn.ExcuteQueryGetTable(ctv);
        String sdht = "";
        try {
            
            if (rs1.next()) 
            {
                
                sdht = rs1.getString("Sodong");
                if(Integer.parseInt(sdht)==0)
                {
                    txtTongTienPN.setText("0");
                    String cvt2 = "update PhieuNhap set TongTien = " + 0 + "where MaPhieuNhap = " + MaPhieuNhap;
                    cnn.ExcuteQueryUpdateDB(cvt2);
                    LayDuLieuPhieuNhap();
                }
                
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    //--------------------------------------------------------------------------------------------------
    //--------------------------------------------------------------------------------------------------
    public void LayDuLieuPhieuNhap() {
        String cautruyvan = "";
        cautruyvan = "select MaPhieuNhap,NhanVien.TenNhanVien,NhaPhanPhoi.TenNhaPhanPhoi,TongTien,NgayNhap,PhieuNhap.ChuThich"
                + " from PhieuNhap,NhanVien,NhaPhanPhoi where PhieuNhap.MaNhanVien =NhanVien.MaNhanVien and PhieuNhap.MaNhaPhanPhoi=NhaPhanPhoi.MaNhaPhanPhoi ";
        ResultSet rs =cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"STT", "Mã Phiếu Nhập", "Nhân Viên Nhập", "Tên Nhà Phân phối", "Thành tiền", "Ngày lập", "Chú Thích"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblPhieuNhap.setModel(tableModel);
        int c = 0;
        try 
        {
            while (rs.next()) {
                Object[] item = new Object[7];
                c++;
                item[0] = c;
                item[1] = rs.getInt("MaPhieuNhap");
                item[2] = rs.getString("TenNhanVien");
                item[3] = rs.getString("TenNhaPhanPhoi");
                long longNumber = rs.getLong("TongTien");
                
                Locale localeVN = new Locale("vi", "VN");
                NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
                String str1 = currencyVN.format(longNumber);
               
                item[4] = str1;
                item[5] = rs.getString("NgayNhap");
                item[6] = rs.getString("ChuThich");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        
    }
    public long getVon()
    {
        long TongVon = 0;
        String ctv1 = "select * from Von";
        ResultSet rss = cnn.ExcuteQueryGetTable(ctv1);
        try {
            while(rss.next())
            {
                
                TongVon =rss.getLong("TongVon");
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return TongVon;
    }
    public void LaydulieuVon()
    {
        String ctv1 = "select * from Von";
        ResultSet rss = cnn.ExcuteQueryGetTable(ctv1);
        try {
            while(rss.next())
            {
                Locale localeVN = new Locale("vi", "VN");
                NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
                long Von =rss.getLong("TongVon");
                String str = currencyVN.format(Von);
                
                
                txtTongVon.setText(str);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SanPhamJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //--------------------------------------------------------------------------------------------------
    public void LayDuLieuChiTietPhieuNhap(String MaPhieuNhap) 
    {
        String cautruyvan = "";
        cautruyvan = "select MaCTPN,ChiTietPhieuNhap.MaPhieuNhap ,SanPham.TenSanPham,ChiTietPhieuNhap.SoLuong,"
                + "ChiTietPhieuNhap.TongTien,ChiTietPhieuNhap.ChuThich"
                + " from PhieuNhap,ChiTietPhieuNhap,SanPham where "
                + "PhieuNhap.MaPhieuNhap=ChiTietPhieuNhap.MaPhieuNhap and"
                + " SanPham.MaSanPham=ChiTietPhieuNhap.MaSanPham and ChiTietPhieuNhap.MaphieuNhap=" + MaPhieuNhap;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"STT", "Mã CTPN", "Mã Phiếu Nhập", "Sản Phẩm", "Số Lượng", "Tổng Tiền", "Chú Thích"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblCTPN.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) {
                Object[] item = new Object[7];
                c++;
                item[0] = c;
                item[1] = rs.getInt("MaCTPN");
                item[2] = rs.getInt("MaPhieuNhap");
                item[3] = rs.getString("TenSanPham");
                item[4] = rs.getString("Soluong");
                long longNumber = rs.getLong("TongTien");
                String str1 = en.format(longNumber);
                item[5] = str1;
                item[6] = rs.getString("ChuThich");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //--------------------------------------------------------------------------------------------------
    public void XoaSanPham(String MaSanPham) 
    {
        int so1 = 0, so2 = 0;
        String cautruyvan = "delete SanPham where MaSanPham = " + MaSanPham;
        
        String ctvKiemThu = "select count(MaCTHD) as SoChiTietHoaDon"
                        + " from SanPham,ChiTietHoaDon where SanPham.MaSanPham=ChiTietHoaDon.MaSanPham "
                        + "and SanPham.MaSanPham = " + MaSanPham;
        ResultSet rs1 = cnn.ExcuteQueryGetTable(ctvKiemThu);
        try 
        {
            if (rs1.next()) 
            {
                so1 = rs1.getInt("SoChiTietHoaDon");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        String ctvKiemThu2 = "select count(MaCTPN) as SoChiTietPhieuNhap"
                        + " from SanPham,ChiTietPhieuNhap where SanPham.MaSanPham=ChiTietPhieuNhap.MaSanPham "
                        + "and SanPham.MaSanPham = " + MaSanPham;
        ResultSet rs2 = cnn.ExcuteQueryGetTable(ctvKiemThu2);   
        try {
            if (rs2.next()) 
            {
                so2 = rs2.getInt("SoChiTietPhieuNhap");
                if (so2 == 0 && so1 == 0) {
                    cnn.ExcuteQueryUpdateDB(cautruyvan);
                    System.out.println(cautruyvan);
                    ThongBao("Đã xóa thành công", "Thông báo", 2);
                    ResSanPham();
                    LayDuLieuSanPham("1");
                  
                } else {
                    ThongBao("không thể xóa bởi có trong " + so1 + "  Chi tiết hóa đơn hóa đơn \n và có trong "
                            + so2 + "  chi tiết phiếu Nhập", "báo lỗi", 2);
                }
            }

        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
       
    }
    //--------------------------------------------------------------------------------------------------
   
    //--------------------------------------------------------------------------------------------------
    public void LayDuLieuSanPhamofLoaiSanPham(String MaLoaiSanPham) 
    {
        String cautruyvan = "";
        cautruyvan = "select MaSanPham,SanPham.TenSanPham,LoaiSanPham.TenLoaiSanPham"
                + " as TenLoaiSanPham,SanPham.ChuThich from SanPham,LoaiSanPham where"
                + " SanPham.LoaiSanPham=LoaiSanPham.MaLoaiSanPham and MaLoaiSanPham=" + MaLoaiSanPham;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"STT", "Mã SP", "Tên SP", "Loại SP"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblSanPham_LoaiSp.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) {
                c++;
                Object[] item = new Object[4];
                item[0] = c;
                item[1] = rs.getInt("MaSanPham");
                item[2] = rs.getString("TenSanPham");
                item[3] = rs.getString("TenLoaiSanPham");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //--------------------------------------------------------------------------------------------------
    public void layDuLieuLoaiSanPham() 
    {
        String cautruyvan = "";
        cautruyvan = "select * from LoaiSanPham ";
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"STT", "Mã Loại", "Tên Loại"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblLoaiSanPham.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) {
                c++;
                Object[] item = new Object[3];
                item[0] = c;
                item[1] = rs.getInt("MaLoaiSanPham");
                item[2] = rs.getString("TenLoaiSanPham");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //--------------------------------------------------------------------------------------------------
    public void setLabelImage(String imagePath) 
    {
        if (imagePath == null) {
            imagePath = "";
        }
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(imagePath));
        } catch (IOException e) {

        }
        icon = new ImageIcon(img.getScaledInstance(labelHinhAnh.getWidth(),labelHinhAnh.getHeight(), Image.SCALE_SMOOTH));

        labelHinhAnh.setIcon(icon);
    }
    //--------------------------------------------------------------------------------------------------
    public DefaultComboBoxModel LayDuLieucbb(String bang, String Ten, String Ma) 
    {
        String cautruyvan = "select *from " + bang;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel();
        try {
            while (rs.next()) {
                displayvalueModel valueModel = new displayvalueModel(rs.getString(Ten), rs.getString(Ma));
                cbbmodel.addElement(valueModel);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return cbbmodel;
    }
    //--------------------------------------------------------------------------------------------------
    public void ResSanPham() 
    {
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtGiaNhap.setText("");
        txtGiaBan.setText("");
        txtTonKho.setText("");
        txtImg_SanPham.setText("");
        txtChuThichSanPham.setText("");
        cbbLoaiSP.setSelectedIndex(0);
        cbbHangSX.setSelectedIndex(0);
    }    
    //--------------------------------------------------------------------------------------------------
    public void ResCTPN()
    {
        txtMaCTPN.setText("");
        txtMaPNCTPN.setText("");
        cbbSanPhamCTPN.setSelectedIndex(1);
        txtSoLuong.setText("");
        txtTongTienCTPN.setText("");
        txtGhiChuCTPN.setText("");
        
    }
    public void ResPN()
    {
        String MaPhieuNhap, TongTien, NgayLap, ChuThich;
        txtMaPN.setText("");
        cbbNV.setSelectedIndex(1);
        cbbNgayNhap.setSelectedIndex(1);
        cbbThangNhap.setSelectedIndex(1);
        cbbNamNhap.setSelectedIndex(1);
        
        txtTongTienPN.setText("");
        txtChuThichPN.setText("");
    }
    //--------------------------------------------------------------------------------------------------
    public void LayDuLieuSanPham(String TrangThai) 
    {
        String cautruyvan = "";
        cautruyvan = "select MaSanPham,SanPham.TenSanPham,SanPham.LoaiSanPham,GiaNhap,HeSo,(SanPham.GiaNhap * SanPham.HeSo) as GiaBan ,HangsanXuat.TenHangSanXuat as THSX,TonKho,LoaiSanPham.TenLoaiSanPham"
                + " as TenLoaiSanPham,Image,SanPham.ChuThich from SanPham,LoaiSanPham,HangSanXuat where "
                + "SanPham.LoaiSanPham=LoaiSanPham.MaLoaiSanPham and SanPham.HangSanXuat=HangSanXuat.MaHangSanXuat and TrangThai=" + TrangThai;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"STT", "Mã SP", "Tên SP", "Loại SP", "Giá nhập","Gia Ban", "Hãng SX", "Tồn kho","Hình ảnh", "Chú thích"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblSanPham.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) 
            {
                c++;
                Object[] item = new Object[10];
                item[0] = c;
                item[1] = rs.getInt("MaSanPham");
                item[2] = rs.getString("TenSanPham");
                item[3] = rs.getString("TenLoaiSanPham");
                long longNumber = rs.getLong("GiaNhap");
                
                Locale localeVN = new Locale("vi", "VN");
                NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
                String str1 = currencyVN.format(longNumber);
                item[4] = str1;
                long longNumber1 = rs.getLong("GiaBan");
                
                
                String str2 = currencyVN.format(longNumber1);
                item[5] = str2;
                item[6] = rs.getString("THSX");
                item[7] = rs.getInt("TonKho");  
                item[8] = rs.getString("Image");
                item[9] = rs.getString("ChuThich");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) 
        {
            System.out.println(ex.toString());
        }
    }
    //-----------------------------------------------------------------------------------
    public boolean KiemTraNhanSanPham(int ts) 
    {
        String MaSanPham, TenSanPham, GiaNhap,GiaBan,TonKho;
        boolean kiemtra = false;
        MaSanPham = txtMaSP.getText();
        TenSanPham = txtTenSP.getText();
        TonKho= txtTonKho.getText().trim();
        String  ThongBao = "";
        GiaNhap = txtGiaNhap.getText();
        GiaBan = txtGiaBan.getText();
        if (MaSanPham.equals("") && ts == 1) 
        {
            ThongBao += "Bạn chưa chọn sản phẩm để lấy mã Sản phẩm\n";
            lblMaSP.setForeground(Color.red);
        }
        if (TenSanPham.equals("")) 
        {
            ThongBao += "bạn chưa Nhập Tên Sản Phẩm\n";
            lblTenSP.setForeground(Color.red);
        }
        if (GiaNhap.equals("")) 
        {
            lblGiaNhap.setForeground(Color.red);
            ThongBao += "bạn chưa Nhập Giá Bán\n";
        }
        if (GiaBan.equals("")) 
        {
            lblGiaBan.setForeground(Color.red);
            ThongBao += "bạn chưa Nhập Giá Bán \n";
        }
//        try 
//        {
//            int bien =Integer.valueOf(GiaNhap);
//        } catch (Exception e) 
//        {
//            ThongBao+="Giá Nhập Phải là số !\n";
//        }
//        try 
//        {
//            int bien =Integer.valueOf(GiaBan);
//        } catch (Exception e) 
//        {
//            ThongBao+="Giá Bán Phải là số !\n";
//        }
       
      
        if (TonKho.equals("")) 
        {
            lblTonKho.setForeground(Color.red);
            ThongBao += "bạn chưa Nhập Tồn Kho \n";
        }
        if (ThongBao.equals("")) 
        {
            kiemtra = true;
            lblTenSP.setForeground(Color.black);
            lblMaSP.setForeground(Color.black);
            lblGiaBan.setForeground(Color.black);
            lblTonKho.setForeground(Color.black);
            lblGiaNhap.setForeground(Color.black);
        } else {
            kiemtra = false;
            ThongBao(ThongBao, "lỗi nhập liệu", 2);
        }
        return kiemtra;
    }
    //-----------------------------------------------------------------------------------
    public String GetCbbSelected(JComboBox cbb) 
    {
        Object[] obj = cbb.getSelectedObjects();
        displayvalueModel item = (displayvalueModel) obj[0];
        return item.displayvalue.toString();

    }
    //-------------------------------------------------------------------
    public void ThongBao(String noiDungThongBao, String tieuDeThongBao, int icon) 
    {
        JOptionPane.showMessageDialog(new JFrame(), noiDungThongBao,
                tieuDeThongBao, icon);
    }
    //-------------------------------------------------------------------
    public void setSelectedCombobox(String cbbselected, JComboBox cbb) 
    {
        for (int i = 0; i < cbb.getItemCount(); i++) {
            Object obj = cbb.getItemAt(i);
            if (obj != null) {
                displayvalueModel m = (displayvalueModel) obj;
                if (cbbselected.trim().equals(m.displayMember)) {
                    cbb.setSelectedItem(m);
                }
            }
        }
    }

    public void setGiaBan()
    {
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoiHinh_SanPham;
    private javax.swing.JButton btnResetCTPN;
    private javax.swing.JButton btnResetLoaiSP;
    private javax.swing.JButton btnResetPN;
    private javax.swing.JButton btnResetSP;
    private javax.swing.JButton btnSanPhamAn;
    private javax.swing.JButton btnSuaCTPN;
    private javax.swing.JButton btnSuaLoaiSP;
    private javax.swing.JButton btnSuaPN;
    private javax.swing.JButton btnSuaSP;
    private javax.swing.JButton btnThemCTPN;
    private javax.swing.JButton btnThemLoaiSP;
    private javax.swing.JButton btnThemPN;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnXoaCTPN;
    private javax.swing.JButton btnXoaLoaiSP;
    private javax.swing.JButton btnXoaPN;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JComboBox<String> cbbHangSX;
    private javax.swing.JComboBox<String> cbbLoaiSP;
    private javax.swing.JComboBox<String> cbbLoaiSanPham;
    private javax.swing.JComboBox<String> cbbNV;
    private javax.swing.JComboBox<String> cbbNamNhap;
    private javax.swing.JComboBox<String> cbbNgayNhap;
    private javax.swing.JComboBox<String> cbbNhaPhanPhoi;
    private javax.swing.JComboBox<String> cbbSanPhamCTPN;
    private javax.swing.JComboBox<String> cbbThangNhap;
    private javax.swing.JCheckBox chkTimKiemSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanePhieuNhapHang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelLoaiSP;
    private javax.swing.JPanel jPanelSanPham;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jtabblepaneSanPham;
    private javax.swing.JLabel labelHinhAnh;
    private javax.swing.JLabel lblGiaBan;
    private javax.swing.JLabel lblGiaNhap;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblTenSP;
    private javax.swing.JLabel lblTonKho;
    private javax.swing.JTable tblCTPN;
    private javax.swing.JTable tblLoaiSanPham;
    private javax.swing.JTable tblPhieuNhap;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTable tblSanPham_LoaiSp;
    private javax.swing.JTextArea txtChuThichPN;
    private javax.swing.JTextArea txtChuThichSanPham;
    private javax.swing.JTextArea txtGhiChuCTPN;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtImg_SanPham;
    private javax.swing.JTextField txtMaCTPN;
    private javax.swing.JTextField txtMaLoaiSP;
    private javax.swing.JTextField txtMaPN;
    private javax.swing.JTextField txtMaPNCTPN;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenLoaiSP;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTenSanPhamTimKiem;
    private javax.swing.JTextField txtTonKho;
    private javax.swing.JTextField txtTongTienCTPN;
    private javax.swing.JTextField txtTongTienPN;
    private javax.swing.JTextField txtTongVon;
    // End of variables declaration//GEN-END:variables
}
