/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Database.ConnectDB;
import java.awt.Color;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nguye
 */
public class HDJPanel extends javax.swing.JPanel 
{
    ConnectDB cnn = new ConnectDB();
    MainJFrame main = new MainJFrame();
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    
    Calendar cal = Calendar.getInstance();
    Calendar cal1 = Calendar.getInstance();
    int day = cal.get(Calendar.DAY_OF_MONTH);
    int month = cal.get(Calendar.MONTH) + 1;
    int year = cal.get(Calendar.YEAR);
    
    /**
     * Creates new form HDJPanel
     */
    
    public HDJPanel() {
        initComponents();
        HienHD();
    }
    public HDJPanel(int a) {
        initComponents();
        HienHD();
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpannal = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCTHD = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblMaHD = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNgayLap = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTongtien = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        txtTongTIen = new javax.swing.JTextField();
        cbbNV = new javax.swing.JComboBox<>();
        cbbKH = new javax.swing.JComboBox<>();
        txtNgayLap = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        lblMaCTHD = new javax.swing.JLabel();
        lblMaHoadon = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblSL = new javax.swing.JLabel();
        jlbTienGoc = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMaCTHD = new javax.swing.JTextField();
        txtMaHDCTHD = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtThanhTienCTHD = new javax.swing.JTextField();
        cbbSanPham = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtGhiCHuCTHD = new javax.swing.JTextArea();
        txtTiengoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbbGoiBaoHanh = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtMaIMEI = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnThemCTHD = new javax.swing.JButton();
        btnXoaCTHD = new javax.swing.JButton();
        btnResetCTHD = new javax.swing.JButton();
        btnSuaCTHD = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();

        jpannal.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin chung hóa đơn")));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Nhân viên", "Khách hàng", "Ngày lập", "Tổng tiền", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Long.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblHoaDon.setColumnSelectionAllowed(true);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHoaDon);
        tblHoaDon.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jpannalLayout = new javax.swing.GroupLayout(jpannal);
        jpannal.setLayout(jpannalLayout);
        jpannalLayout.setHorizontalGroup(
            jpannalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpannalLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE))
        );
        jpannalLayout.setVerticalGroup(
            jpannalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpannalLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin chi tiết hóa đơn"));

        tblCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã CTHĐ", "Mã HĐ", "Sản phẩm", "Mã IMEI", "Số lượng", "Thành tiền", "Ghi chú"
            }
        ));
        tblCTHD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblCTHDFocusLost(evt);
            }
        });
        tblCTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTHDMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblCTHD);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin phiếu mua"));

        lblMaHD.setText("Mã HĐ:");

        jLabel3.setText("Nhân viên:");

        lblNgayLap.setText("Ngày lập:");

        jLabel5.setText("Khách hàng:");

        lblTongtien.setText("Tổng tiền:");

        jLabel7.setText("Ghi chú:");

        txtMaHD.setEditable(false);

        txtTongTIen.setEditable(false);

        cbbKH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbKHItemStateChanged(evt);
            }
        });

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNgayLap, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTongtien, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMaHD, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaHD)
                    .addComponent(cbbNV, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbKH, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNgayLap, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTongTIen))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaHD))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(cbbKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgayLap)
                    .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTongtien)
                    .addComponent(txtTongTIen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin chi tiết phiếu nhập"));

        lblMaCTHD.setText("Mã CTHĐ:");

        lblMaHoadon.setText("Mã HĐ:");

        jLabel10.setText("Sản phẩm:");

        lblSL.setText("Số lượng:");

        jlbTienGoc.setText("Thành tiền:");

        jLabel13.setText("Ghi chú:");

        txtMaCTHD.setEditable(false);

        txtMaHDCTHD.setEditable(false);

        txtSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoLuongKeyReleased(evt);
            }
        });

        txtThanhTienCTHD.setEditable(false);

        cbbSanPham.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbSanPhamItemStateChanged(evt);
            }
        });
        cbbSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSanPhamActionPerformed(evt);
            }
        });

        txtGhiCHuCTHD.setColumns(20);
        txtGhiCHuCTHD.setRows(5);
        jScrollPane3.setViewportView(txtGhiCHuCTHD);

        txtTiengoc.setText("jTextField1");

        jLabel2.setText("Gói bảo hành:");

        cbbGoiBaoHanh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbGoiBaoHanhItemStateChanged(evt);
            }
        });

        jLabel1.setText("Mã IMEI:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblMaCTHD, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblMaHoadon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblSL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jlbTienGoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaCTHD)
                    .addComponent(txtMaHDCTHD)
                    .addComponent(txtSoLuong)
                    .addComponent(txtThanhTienCTHD)
                    .addComponent(cbbSanPham, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(cbbGoiBaoHanh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaIMEI))
                .addGap(1, 1, 1))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(233, Short.MAX_VALUE)
                    .addComponent(txtTiengoc, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMaCTHD, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(txtMaCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMaHoadon, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(txtMaHDCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(cbbSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(txtMaIMEI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(cbbGoiBaoHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSL, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlbTienGoc, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(txtThanhTienCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                        .addGap(4, 4, 4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(146, 146, 146)
                    .addComponent(txtTiengoc, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(140, Short.MAX_VALUE)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/plus.png"))); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/updated.png"))); // NOI18N
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/trash (1).png"))); // NOI18N
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReset)
                    .addComponent(btnSua)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addGap(3, 3, 3))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));

        btnThemCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/plus.png"))); // NOI18N
        btnThemCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCTHDActionPerformed(evt);
            }
        });

        btnXoaCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/x-button.png"))); // NOI18N
        btnXoaCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTHDActionPerformed(evt);
            }
        });

        btnResetCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnResetCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCTHDActionPerformed(evt);
            }
        });

        btnSuaCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/updated.png"))); // NOI18N
        btnSuaCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCTHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemCTHD)
                    .addComponent(btnSuaCTHD)
                    .addComponent(btnXoaCTHD)
                    .addComponent(btnResetCTHD))
                .addGap(3, 3, 3))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnThemCTHD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSuaCTHD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoaCTHD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetCTHD))
        );

        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpannal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpannal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        int viTriDongVuaBam = tblHoaDon.getSelectedRow();
        txtMaHD.setText(tblHoaDon.getValueAt(viTriDongVuaBam, 0).toString());
        txtNgayLap.setText(tblHoaDon.getValueAt(viTriDongVuaBam, 3).toString());
        txtTongTIen.setText(tblHoaDon.getValueAt(viTriDongVuaBam, 4).toString());
        txtGhiChu.setText(tblHoaDon.getValueAt(viTriDongVuaBam, 5).toString());
        setSelectedCombobox(tblHoaDon.getValueAt(viTriDongVuaBam, 2).toString(), cbbNV);
        setSelectedCombobox(tblHoaDon.getValueAt(viTriDongVuaBam, 1).toString(), cbbKH);
        LayDuLieuChiTietHoaDon(txtMaHD.getText());
        if (tblCTHD.getRowCount() > 0) {
            cbbSanPham.setModel(LayDuLieucbb("SanPham", "TenSanPham", "MaSanPham"));
            txtMaCTHD.setText(tblCTHD.getValueAt(0, 0).toString());
            txtMaHDCTHD.setText(tblCTHD.getValueAt(0, 1).toString());
            txtMaIMEI.setText(tblCTHD.getValueAt(0, 3).toString());
            txtSoLuong.setText(tblCTHD.getValueAt(0, 4).toString());
            txtThanhTienCTHD.setText(tblCTHD.getValueAt(0, 5).toString());
            txtGhiCHuCTHD.setText(tblCTHD.getValueAt(0, 6).toString());
            setSelectedCombobox(tblCTHD.getValueAt(0, 2).toString(), cbbSanPham);
        } else {
            reset_chitiethoadon();
            txtMaHDCTHD.setText(txtMaHD.getText());
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblCTHDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblCTHDFocusLost
        // TODO add your handling code here:
        //txtMaCTHD.setText(tblCTHD.getValueAt(, 1).toString());
    }//GEN-LAST:event_tblCTHDFocusLost

    private void tblCTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTHDMouseClicked
        // TODO add your handling code here:
        int viTriDongVuaBam = tblCTHD.getSelectedRow();
        txtMaCTHD.setText(tblCTHD.getValueAt(viTriDongVuaBam, 0).toString());
        txtMaHDCTHD.setText(tblCTHD.getValueAt(viTriDongVuaBam, 1).toString());
        txtMaIMEI.setText(tblCTHD.getValueAt(viTriDongVuaBam, 3).toString());
        txtSoLuong.setText(tblCTHD.getValueAt(viTriDongVuaBam, 4).toString());
        txtThanhTienCTHD.setText(tblCTHD.getValueAt(viTriDongVuaBam, 5).toString());
        txtGhiCHuCTHD.setText(tblCTHD.getValueAt(viTriDongVuaBam, 6).toString());
        setSelectedCombobox(tblCTHD.getValueAt(viTriDongVuaBam, 2).toString(), cbbSanPham);
        LayDuLieuChiTietHoaDon(txtMaHD.getText());
    }//GEN-LAST:event_tblCTHDMouseClicked

    private void cbbKHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbKHItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbbKHItemStateChanged

    private void txtSoLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoLuongKeyReleased
        // TODO add your handling code here:
        String MaGoiBaoHanh = GetCbbSelected(cbbGoiBaoHanh);
        String cautruyvan1 = "select * from GoiBaoHanh where MaGoiBaoHanh = "+MaGoiBaoHanh;
        ResultSet rs1 = cnn.ExcuteQueryGetTable(cautruyvan1);
        int GiaBaoHanh = 0;
        try {
            while(rs1.next())
            {
                GiaBaoHanh = rs1.getInt("PhiBaoHanh");
            }
        }catch(Exception e)
        {
            
        }
        String MaSanPham = GetCbbSelected(cbbSanPham);
        String cautruyvan = "select * from SanPham where MaSanPham  = "+MaSanPham;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        int TonKho = 0;
        try {
            while(rs.next())
            {
                TonKho = rs.getInt("TonKho");
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        int SoLuong = 0;
        long Tien = 0;
        long Goc = 0;
        try {
            SoLuong = Integer.valueOf(txtSoLuong.getText());
            if(TonKho<SoLuong)
            {
                ThongBao("Số lượng hiện không đủ, chỉ còn "+TonKho+" sản phẩm", "Thông báo", 2);
                txtSoLuong.setText(String.valueOf(TonKho));
                long Gia = GetGiaSanPham(GetCbbSelected(cbbSanPham));
                Tien = (long) Gia * TonKho +GiaBaoHanh;
                txtThanhTienCTHD.setText(String.valueOf(Tien));

                long GiaGoc = GetGiaNhapSanPham(GetCbbSelected(cbbSanPham));
                Goc = (long) GiaGoc * TonKho+GiaBaoHanh;
                txtTiengoc.setText(String.valueOf(Goc));
            }
            else{
                long Gia = GetGiaSanPham(GetCbbSelected(cbbSanPham));
                Tien = (long) Gia * SoLuong+GiaBaoHanh;
                txtThanhTienCTHD.setText(String.valueOf(Tien));

                long GiaGoc = GetGiaNhapSanPham(GetCbbSelected(cbbSanPham));
                Goc = (long) GiaGoc * SoLuong+GiaBaoHanh;
                txtTiengoc.setText(String.valueOf(Goc));
            }

        } catch (NumberFormatException e) {
            ThongBao("Số lượng là số", "Thông báo", 2);
        }

    }//GEN-LAST:event_txtSoLuongKeyReleased

    private void cbbSanPhamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbSanPhamItemStateChanged
        // TODO add your handling code here:
        String MaGoiBaoHanh = GetCbbSelected(cbbGoiBaoHanh);
        String cautruyvan = "select * from GoiBaoHanh where MaGoiBaoHanh = "+MaGoiBaoHanh;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        int GiaBaoHanh = 0;
        try {
            while(rs.next())
            {
                GiaBaoHanh = rs.getInt("PhiBaoHanh");
                int SoLuong = 0;
                long Tien = 0;

                try {
                    SoLuong = Integer.valueOf(txtSoLuong.getText());
                } catch (Exception e) {
                }
                int Gia = GetGiaSanPham(GetCbbSelected(cbbSanPham));
                Tien = (long) Gia * SoLuong + GiaBaoHanh;
                txtThanhTienCTHD.setText(String.valueOf(Tien));

                long Goc = 0;
                try {
                    SoLuong = Integer.valueOf(txtSoLuong.getText());
                } catch (Exception e)
                {
                }
                int GiaGoc = GetGiaNhapSanPham(GetCbbSelected(cbbSanPham));
                Goc = (long) GiaGoc * SoLuong + GiaBaoHanh;
                txtTiengoc.setText(String.valueOf(Goc));
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbbSanPhamItemStateChanged

    private void cbbSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbSanPhamActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String MaKhachHang, MaNhanVien, NgayLapHoaDon, TongTien, ChuThich;
        MaKhachHang = GetCbbSelected(cbbKH);
        MaNhanVien = GetCbbSelected(cbbNV);
        NgayLapHoaDon = txtNgayLap.getText();
        TongTien = txtTongTIen.getText();
        ChuThich = txtGhiChu.getText();
        String cautruyvan = "insert into HoaDon(MaKhachHang,MaNhanVien,TongTien,GhiChu) values(" + MaKhachHang + "," + MaNhanVien + "," + 0 + ",N'" + ChuThich + "')";
        System.out.println(cautruyvan);
        boolean kiemtra = KiemTraNhapHoaDon(0);
        if (kiemtra) {
            cnn.ExcuteQueryUpdateDB(cautruyvan);
            ThongBao("Thêm thành công", "Thông báo", 2);
        } else {
            ThongBao("Thêm Thất bại", "Thông báo", 2);
        }
        LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        String MaHoaDon, MaKhachHang, MaNhanVien, NgayLapHoaDon, TongTien, ChuThich;

        MaHoaDon = txtMaHD.getText();
        if(MaHoaDon.equals(""))
        {
            ThongBao("Bạn chưa chọn Hóa Đơn cần sửa", "Thông báo", 2);
        }
        else
        {
            MaKhachHang = GetCbbSelected(cbbKH);
            MaNhanVien = GetCbbSelected(cbbNV);
            NgayLapHoaDon = txtNgayLap.getText();
            TongTien = txtTongTIen.getText();
            ChuThich = txtGhiChu.getText();
            String cautruyvan = "update HoaDon set MaNhanVien = "+MaNhanVien+",MaKhachHang=" + MaKhachHang + ",TongTien="
            + TongTien + ",NgayLapHoaDon='" + NgayLapHoaDon + "',GhiChu=N'" + ChuThich + "' where MaHoaDon=" + MaHoaDon;
            System.out.println(cautruyvan);
            boolean kiemtra = KiemTraNhapHoaDon(1);
            if (kiemtra) {
                cnn.ExcuteQueryUpdateDB(cautruyvan);
                ThongBao("Sửa thành công ", "Thêm Hóa Đơn", 2);
            } else {
                ThongBao("Không thể ", "Thêm Hóa Đơn", 2);
            }
            LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (!txtMaHD.getText().equals(""))
        {
            String MaHoaDon = txtMaHD.getText();
            String cautruyvan = "delete HoaDon where MaHoaDon=" + MaHoaDon;
            String ctvKiemThu = "select count(MaCTHD) as SoChiTietPhieuMua"
            + " from HoaDon,ChiTietHoaDon where HoaDon.MaHoaDon=ChiTietHoaDon.MaHoaDon and HoaDon.MaHoaDon=" + MaHoaDon;
            ResultSet rs1 = cnn.ExcuteQueryGetTable(ctvKiemThu);
            System.out.println(ctvKiemThu);
            int so1 = 0;
            try {
                if (rs1.next()) {
                    so1 = rs1.getInt("SoChiTietPhieuMua");
                    if (rs1.getInt("SoChiTietPhieuMua") == 0) {
                        cnn.ExcuteQueryUpdateDB(cautruyvan);
                        ThongBao("Xóa thành công ", "Thêm Hóa Đơn", 2);
                        LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
                    } else {
                        ThongBao("không thể xóa bởi hóa đơn đã có " + so1 + " chi tiết hóa đơn!", "báo lỗi", 2);
                    }
                }
            } catch (SQLException ex) {
                //Logger.getLogger(frmTrangChu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ThongBao("bạn chưa chọn hóa đơn để xóa", "xóa bằng niềm tin à!khi không biết xóa cái nào", 2);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtMaHD.setText("");
        cbbKH.setSelectedIndex(1);
        cbbNV.setSelectedIndex(1);
        txtNgayLap.setText(year+"-"+month+"-"+day);
        txtTongTIen.setText("");
        txtGhiChu.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnThemCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCTHDActionPerformed
        // TODO add your handling code here:
        String MaCTHD,MaHoaDon, MaSanPham, SoLuong, TongTien,TienGoc, ChuThich,MaIMEI,MaGoiBaoHanh;

        MaHoaDon = txtMaHDCTHD.getText();

        String ctv4 = "Select HoaDon.ThanhToan as TT from HoaDon,ChiTietHoaDon where HoaDon.MaHoaDon = ChiTietHoaDon.MaHoaDon and ChiTietHoaDon.MaHoaDon = "+txtMaHDCTHD.getText()+" group by HoaDon.ThanhToan";
        ResultSet rs4 = cnn.ExcuteQueryGetTable(ctv4);
        int TT = 0;
        try {
            while(rs4.next())
            {
                TT = rs4.getInt("TT");
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(TT==1)
        {
            ThongBao("Hoá đơn đã được thanh toán, không thể thêm", "Thông báo", 2);
        }
        else
        {
            MaIMEI = txtMaIMEI.getText();
            MaGoiBaoHanh = GetCbbSelected(cbbGoiBaoHanh);
            String c = "select * from GoiBaoHanh where MaGoiBaoHanh = "+MaGoiBaoHanh;
            ResultSet rc = cnn.ExcuteQueryGetTable(c);
            int GiaBaoHanh = 0;            
            try {
                while(rc.next())
                {
                    GiaBaoHanh = rc.getInt("PhiBaoHanh");
                }
            } catch (SQLException ex) {
                Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                
                
            MaSanPham = GetCbbSelected(cbbSanPham);
            SoLuong = txtSoLuong.getText();
            TongTien = txtThanhTienCTHD.getText();
            TienGoc = txtTiengoc.getText();
            ChuThich = txtGhiCHuCTHD.getText();
            String cautruyvan = "insert into ChiTietHoaDon(MaHoaDon, MaSanPham, SoLuong, TongTien, TienGoc, GhiChu,MaIMEI,PhiBaoHanh) values(" + MaHoaDon + "," + MaSanPham + "," + SoLuong + "," + TongTien + ","+TienGoc+",N'" + ChuThich + "',N'"+MaIMEI+"',"+String.valueOf(GiaBaoHanh)+")";
            System.out.println(cautruyvan);
            boolean kiemtra = KiemTraNhapChiTietHoaDon(0);
            if (kiemtra)
            {
                cnn.ExcuteQueryUpdateDB(cautruyvan);
                
                String ctv6 = "SELECT TOP 1 * FROM ChiTietHoaDon ORDER BY MaCTHD DESC";
                ResultSet rs6 = cnn.ExcuteQueryGetTable(ctv6);
                try {
                    while(rs6.next())
                    {
                        MaCTHD = rs6.getString("MaCTHD");
                        String ctv5 = "insert into ChiTietThongKe(MaCTDH,MaSanPham,SoLuongBan) values(" + MaCTHD + "," + MaSanPham + "," + SoLuong + ")";
                        cnn.ExcuteQueryUpdateDB(ctv5);

                        if(MaGoiBaoHanh.equals("1"))
                        {  
                            int month1 = month + 3;
                            if(month1 > 12)
                            {
                                int year1 = year +1;
                                int month2 = month1 -12;
                                String HanBaoHanh = String.valueOf(year1+"-"+month2+"-"+day);
                                String ctv7 = "insert into BaoHanh(MaCTHD,MaGoiBaoHanh,HanBaoHanh,GhiChu,MaIMEI) values("+MaCTHD+","+MaGoiBaoHanh+",'"+HanBaoHanh+"' ,N'"+ChuThich+"',N'"+MaIMEI+"')";
                                cnn.ExcuteQueryUpdateDB(ctv7);
                            }
                            else
                            {
                                String HanBaoHanh = String.valueOf(year+"-"+month1+"-"+day);
                                String ctv7 = "insert into BaoHanh(MaCTHD,MaGoiBaoHanh,HanBaoHanh,GhiChu,MaIMEI) values("+MaCTHD+","+MaGoiBaoHanh+",'"+HanBaoHanh+"',N'"+ChuThich+"',N'"+MaIMEI+"')";
                                cnn.ExcuteQueryUpdateDB(ctv7);
                            }

                        }
                        if(MaGoiBaoHanh.equals("2"))
                        {
                            int montha = month + 6;
                            if(montha > 12)
                            {
                                int yeara = year +1;
                                int monthaa = montha -12;
                                String HanBaoHanh = String.valueOf(yeara+"-"+monthaa+"-"+day);
                                String ctv7 = "insert into BaoHanh(MaCTHD,MaGoiBaoHanh,HanBaoHanh,GhiChu,MaIMEI) values("+MaCTHD+","+MaGoiBaoHanh+",'"+HanBaoHanh+"',N'"+ChuThich+"',N'"+MaIMEI+"')";
                                cnn.ExcuteQueryUpdateDB(ctv7);
                            }
                            else
                            {
                                String HanBaoHanh = String.valueOf(year+"-"+montha+"-"+day);
                                String ctv7 = "insert into BaoHanh(MaCTHD,MaGoiBaoHanh,HanBaoHanh,GhiChu,MaIMEI) values("+MaCTHD+","+MaGoiBaoHanh+",'"+HanBaoHanh+"',N'"+ChuThich+"',N'"+MaIMEI+"')";
                                cnn.ExcuteQueryUpdateDB(ctv7);
                            }
                        }
                        if(MaGoiBaoHanh.equals("3"))
                        {
                            int month3a = month + 12;
                            if(month3a > 12)
                            {
                                int year3a = year +1;
                                int month3aa = month3a -12;
                                String HanBaoHanh = String.valueOf(year3a+"-"+month3aa+"-"+day);
                                String ctv7 = "insert into BaoHanh(MaCTHD,MaGoiBaoHanh,HanBaoHanh,GhiChu,MaIMEI) values("+MaCTHD+","+MaGoiBaoHanh+",'"+HanBaoHanh+"',N'"+ChuThich+"',N'"+MaIMEI+"')";
                                cnn.ExcuteQueryUpdateDB(ctv7);
                            }
                            else
                            {
                                String HanBaoHanh = String.valueOf(year+"-"+month3a+"-"+day);
                                String ctv7 = "insert into BaoHanh(MaCTHD,MaGoiBaoHanh,HanBaoHanh,GhiChu,MaIMEI) values("+MaCTHD+","+MaGoiBaoHanh+",'"+HanBaoHanh+"',N'"+ChuThich+"',N'"+MaIMEI+"')";
                                cnn.ExcuteQueryUpdateDB(ctv7);
                            }
                        }

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else
            {
                ThongBao("Thêm thất bại ", "Thêm CT Hóa Đơn", 2);
                
            }
            LayDuLieuChiTietHoaDon(MaHoaDon);
            SetTongTien(MaHoaDon);
            SetTongTienGoc(MaHoaDon);
            //---------------------------------Set Số Lượng còn lại của sản phẩn sau khi thêm 1 chi tiết hóa đơn
            String cautruyvan1 ="select * from SanPham where MaSanPham = "+MaSanPham;
            ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan1);
            int SL=0;
            try {
                while(rs.next())
                {
                    SL = rs.getInt("TonKho");
                }
            } catch (SQLException ex) {
                Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            int SLM = Integer.valueOf(txtSoLuong.getText());
            SL = SL - SLM;
            String ctv = "update SanPham set TonKho = "+SL+" where MaSanPham = "+MaSanPham;
            cnn.ExcuteQueryUpdateDB(ctv);
            
            
            //reset_chitiethoadon();
        }
    }//GEN-LAST:event_btnThemCTHDActionPerformed

    
    private void btnXoaCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTHDActionPerformed
        // TODO add your handling code here:
    
        String MaSanPham = GetCbbSelected(cbbSanPham);
        String MaCTHD = txtMaCTHD.getText();
        String MaHoaDOn = txtMaHDCTHD.getText();
        int SL = Integer.valueOf(txtSoLuong.getText());
        String ctv = "Select HoaDon.ThanhToan as TT from HoaDon,ChiTietHoaDon where HoaDon.MaHoaDon = ChiTietHoaDon.MaHoaDon and ChiTietHoaDon.MaHoaDon = "+MaHoaDOn+" group by HoaDon.ThanhToan";
        ResultSet rs = cnn.ExcuteQueryGetTable(ctv);
        int TT = 0;
        try {
            while(rs.next())
            {
                TT = rs.getInt("TT");
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(TT==1)
        {
            ThongBao("Hoá đơn đã được thanh toán, không thể xóa", "Thông báo", 2);
        }
        else if(MaCTHD.equals(""))
        {
            ThongBao("Bạn chưa chọn chi tiết hóa đơn cần xóa", "Thông báo", 2);
        }
        else
        {
            String ctv4 ="delete ChiTietThongKe where MaCTDH = " + MaCTHD;
            cnn.ExcuteQueryUpdateDB(ctv4);
            String ctv7 = "delete BaoHanh where MaCTHD = "+MaCTHD;
            cnn.ExcuteQueryUpdateDB(ctv7);
            String cautruyvan = "delete ChiTietHoaDon where MaCTHD = " + MaCTHD;
            cnn.ExcuteQueryUpdateDB(cautruyvan);

            System.out.println(cautruyvan);
            ThongBao("Đã xóa thành công", "Thông báo", 2);
            
            LayDuLieuChiTietHoaDon(MaHoaDOn);
            SetTongTien(MaHoaDOn);
            SetTongTienGoc(MaHoaDOn);
            //-----------------------------------------------Set Tồn kho của sản phẩm khi xóa 1 chi tiết hóa đơn
            String ctv3 = "select * from SanPham where MaSanPham = " + MaSanPham;
            ResultSet rs3 = cnn.ExcuteQueryGetTable(ctv3);
            int SLT = 0 ;
            try {
                while(rs3.next())
                {
                    SLT = rs3.getInt("TonKho");
                }
            } catch (SQLException ex) {
                Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            SLT= SLT + SL;
            String ctv2 = "update SanPham set TonKho = "+SLT+"where MaSanPham = "+MaSanPham;
            cnn.ExcuteQueryUpdateDB(ctv2);
            //------------------------------------------------Set SL basn dc
            /*  String ctv4 = "select * from ChiTietThongKe where MaCTDH = "+MaCTHD;
            ResultSet rs4 = cnn.ExcuteQueryGetTable(ctv4);
            int SLB = 0 ;
            try {
                while(rs4.next())
                {
                    SLB = rs4.getInt("SoLuongBan");
                }
            } catch (SQLException ex) {
                Logger.getLogger(HoaDonJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            SLB = SLB - SL;
            String ctv5 = "update ChiTietThongKe set SoLuongBan = "+SLB+" where MaCTDH = "+MaCTHD;
            cnn.ExcuteQueryUpdateDB(ctv5);*/
            //-----------------------------------------------
            reset_chitiethoadon();
        }
    }//GEN-LAST:event_btnXoaCTHDActionPerformed

    private void btnResetCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCTHDActionPerformed
        // TODO add your handling code here:
        reset_chitiethoadon();
    }//GEN-LAST:event_btnResetCTHDActionPerformed

    private void btnSuaCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCTHDActionPerformed
        // TODO add your handling code here:
        if(txtMaCTHD.getText().equals(""))
        {
            ThongBao("Vui lòng chọn CTHD cần sửa", "Thông báo", 2);
        }
        else
        {
            String ctv4 = "Select HoaDon.ThanhToan as TT from HoaDon,ChiTietHoaDon where HoaDon.MaHoaDon = ChiTietHoaDon.MaHoaDon and ChiTietHoaDon.MaHoaDon = "+txtMaHDCTHD.getText()+" group by HoaDon.ThanhToan";
            ResultSet rs4 = cnn.ExcuteQueryGetTable(ctv4);
            int TT = 0;
            try {
                while(rs4.next())
                {
                    TT = rs4.getInt("TT");
                }
            } catch (SQLException ex) {
                Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(TT==1)
            {
                ThongBao("Hoá đơn đã được thanh toán, không thể sửa", "Thông báo", 2);
            }
            else{

                String MaHoaDon, MaChiTietHoaDon, MaSanPham, TongTien,SoLuong, TienGoc,GhiChu,MaIMEI;
                int SoLuong1,SLS,SLBD;

                MaChiTietHoaDon = txtMaCTHD.getText();
                String MaGoiBaoHanh = GetCbbSelected(cbbGoiBaoHanh);
                String c = "select * from GoiBaoHanh where MaGoiBaoHanh = "+MaGoiBaoHanh;
                ResultSet rc = cnn.ExcuteQueryGetTable(c);
                int GiaBaoHanh = 0;            
                try {
                    while(rc.next())
                    {
                        GiaBaoHanh = rc.getInt("PhiBaoHanh");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                String ctv ="select * from ChiTietHoaDon where MaCTHD = " + MaChiTietHoaDon;
                ResultSet rs = cnn.ExcuteQueryGetTable(ctv);
                int SL = 0;
                try {
                    while(rs.next())
                    {
                        SL = rs.getInt("SoLuong");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaIMEI = String.valueOf(txtMaIMEI.getText());
                MaHoaDon = txtMaHDCTHD.getText();
                MaSanPham = GetCbbSelected(cbbSanPham);
                SoLuong = txtSoLuong.getText();

                SoLuong1 = Integer.valueOf(txtSoLuong.getText());
                GhiChu = txtGhiCHuCTHD.getText();
                TongTien = txtThanhTienCTHD.getText();
                TienGoc = txtTiengoc.getText();

                if(SL > SoLuong1)
                {
                    SLS = SL - SoLuong1; // nếu giảm sl thì tồn kho + thêm phần dư
                    SLBD = SL - SoLuong1;
                }else if(SL<SoLuong1)
                {
                    SLS = SL-SoLuong1; //nếu tăng sl thì tồn kho sẽ - đi phần dư
                    SLBD = SL -SoLuong1;
                }else
                {
                    SLS = 0;
                    SLBD = 0;
                }

                String ctv3 = "select * from SanPham where MaSanPham = "+MaSanPham;
                ResultSet rs2 = cnn.ExcuteQueryGetTable(ctv3);
                int TonKho = 0;
                try {
                    while(rs2.next())
                    {
                        TonKho = rs2.getInt("TonKho");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                TonKho = TonKho + SLS;
                String ctv2 = "update SanPham set TonKho = "+TonKho+" where MaSanPham = "+MaSanPham;
                cnn.ExcuteQueryUpdateDB(ctv2);

                String ctv5 = "select * from ChiTietThongKe where MaCTDH = "+MaChiTietHoaDon;
                ResultSet rs5 = cnn.ExcuteQueryGetTable(ctv5);
                int SLM = 0;
                try {
                    while(rs5.next())
                    {
                        SLM = rs5.getInt("SoLuongBan");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                SLM = SLM - SLBD;
                String ctv6 = "update ChiTietThongKe set SoLuongBan = "+SLM+" where MaCTDH = "+MaChiTietHoaDon;
                cnn.ExcuteQueryUpdateDB(ctv6);

                String cautruyvan = "update  ChiTietHoaDon set MaSanPham=" + MaSanPham + ",SoLuong=" + SoLuong + ",TongTien="
                + TongTien + ",TienGoc = "+TienGoc+",GhiChu=N'" + GhiChu + "',MaIMEI = N'"+MaIMEI+"',PhiBaoHanh = "+String.valueOf(GiaBaoHanh)+" where MaCTHD =" + MaChiTietHoaDon;
                System.out.println(cautruyvan);
                boolean kiemtra = KiemTraNhapChiTietHoaDon(1);
                if (kiemtra && !MaChiTietHoaDon.equals("")) {
                    cnn.ExcuteQueryUpdateDB(cautruyvan);
                    System.out.println("Đã sửa Thành Công");
                    
                    if(MaGoiBaoHanh.equals("1"))
                    {  
                        int month1 = month + 3;
                        if(month1 > 12)
                        {
                            year = year +1;
                            month = month1 -12;
                            String HanBaoHanh = String.valueOf(year+"-"+month+"-"+day);
                            String ctv7 = "update BaoHanh set MaGoiBaoHanh = "+MaGoiBaoHanh+",HanBaoHanh = '"+HanBaoHanh+"',MaIMEI = N'"+MaIMEI+"' where MaCTHD = "+MaChiTietHoaDon;
                            cnn.ExcuteQueryUpdateDB(ctv7);
                        }
                        else
                        {
                            String HanBaoHanh = String.valueOf(year+"-"+month1+"-"+day);
                            String ctv7 = "update BaoHanh set MaGoiBaoHanh = "+MaGoiBaoHanh+",HanBaoHanh = '"+HanBaoHanh+"',MaIMEI = N'"+MaIMEI+"' where MaCTHD = "+MaChiTietHoaDon;
                            cnn.ExcuteQueryUpdateDB(ctv7);
                        }
                        
                    }
                    if(MaGoiBaoHanh.equals("2"))
                    {
                        int month2 = month + 6;
                        if(month2 > 12)
                        {
                            year = year +1;
                            month = month2 -12;
                            String HanBaoHanh = String.valueOf(year+"-"+month+"-"+day);
                            String ctv7 = "update BaoHanh set MaGoiBaoHanh = "+MaGoiBaoHanh+",HanBaoHanh = '"+HanBaoHanh+"',MaIMEI = N'"+MaIMEI+"' where MaCTHD = "+MaChiTietHoaDon;
                            cnn.ExcuteQueryUpdateDB(ctv7);
                        }
                        else
                        {
                            String HanBaoHanh = String.valueOf(year+"-"+month2+"-"+day);
                            String ctv7 = "update BaoHanh set MaGoiBaoHanh = "+MaGoiBaoHanh+",HanBaoHanh = '"+HanBaoHanh+"',MaIMEI = N'"+MaIMEI+"' where MaCTHD = "+MaChiTietHoaDon;
                            cnn.ExcuteQueryUpdateDB(ctv7);
                        }
                    }
                    if(MaGoiBaoHanh.equals("3"))
                    {
                        int month3 = month + 12;
                        if(month3 > 12)
                        {
                            year = year +1;
                            month = month3 -12;
                            String HanBaoHanh = String.valueOf(year+"-"+month+"-"+day);
                            String ctv7 = "update BaoHanh set MaGoiBaoHanh = "+MaGoiBaoHanh+",HanBaoHanh = '"+HanBaoHanh+"',MaIMEI = N'"+MaIMEI+"' where MaCTHD = "+MaChiTietHoaDon;
                            cnn.ExcuteQueryUpdateDB(ctv7);
                        }
                        else
                        {
                            String HanBaoHanh = String.valueOf(year+"-"+month3+"-"+day);
                            String ctv7 = "update BaoHanh set MaGoiBaoHanh = "+MaGoiBaoHanh+",HanBaoHanh = '"+HanBaoHanh+"',MaIMEI = N'"+MaIMEI+"' where MaCTHD = "+MaChiTietHoaDon;
                            cnn.ExcuteQueryUpdateDB(ctv7);
                        }
                    }
                    
                } else {
                    System.out.println("thất bại");
                }
                LayDuLieuChiTietHoaDon(MaHoaDon);
                SetTongTien(MaHoaDon);
                SetTongTienGoc(MaHoaDon);
                reset_chitiethoadon();
            }
        }

    }//GEN-LAST:event_btnSuaCTHDActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        String MaHD = txtMaHD.getText();
        int TT = 1;
        if(MaHD.equals(""))
        {
            ThongBao("Bạn chưa chọn hóa đơn cần thanh toán", "Thông báo", 2);
        }
        else
        {
            String ctv = "select * from HoaDon where MaHoaDon = "+MaHD;
            ResultSet rs = cnn.ExcuteQueryGetTable(ctv);
            try {
                while(rs.next())
                {
                    int ThanhToan = rs.getInt("ThanhToan");
                    if(ThanhToan == 1)
                    {
                        ThongBao("Hoá đơn này đã được thanh toán", "Thông báo", 2);
                    }else{
                        String cautruyvan = "update HoaDon set ThanhToan = "+TT+"where MaHoaDon = "+MaHD;
                        cnn.ExcuteQueryUpdateDB(cautruyvan);
                        frmThanhToan tt = new frmThanhToan(cbbKH.getSelectedItem().toString(),txtMaHD.getText());
                        tt.show();
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void cbbGoiBaoHanhItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbGoiBaoHanhItemStateChanged
        // TODO add your handling code here:
        String MaGoiBaoHanh = GetCbbSelected(cbbGoiBaoHanh);
        String cautruyvan = "select * from GoiBaoHanh where MaGoiBaoHanh = "+MaGoiBaoHanh;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        int GiaBaoHanh = 0;
        try {
            while(rs.next())
            {
                GiaBaoHanh = rs.getInt("PhiBaoHanh");
                int SoLuong = 0;
                long Tien = 0;

                try {
                    SoLuong = Integer.valueOf(txtSoLuong.getText());
                } catch (Exception e) {
                }
                int Gia = GetGiaSanPham(GetCbbSelected(cbbSanPham));
                Tien = (long) Gia * SoLuong + GiaBaoHanh;
                txtThanhTienCTHD.setText(String.valueOf(Tien));

                long Goc = 0;
                try {
                    SoLuong = Integer.valueOf(txtSoLuong.getText());
                } catch (Exception e)
                {
                }
                int GiaGoc = GetGiaNhapSanPham(GetCbbSelected(cbbSanPham));
                Goc = (long) GiaGoc * SoLuong + GiaBaoHanh;
                txtTiengoc.setText(String.valueOf(Goc));
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbbGoiBaoHanhItemStateChanged
    
    public void HienHD()
    {
        LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
        cbbNV.setModel(LayDuLieucbb("NhanVien", "TenNhanVien", "MaNhanVien"));
        cbbKH.setModel(LayDuLieucbb("KhachHang", "TenKhachHang", "MaKhachHang"));
        cbbSanPham.setModel(LayDuLieucbb("SanPham", "TenSanPham", "MaSanPham"));
        cbbGoiBaoHanh.setModel(LayDuLieucbb("GoiBaoHanh", "TenGoi", "MaGoiBaoHanh"));
        txtNgayLap.setText(year+"-"+month+"-"+day);
    }
    public int GetGiaSanPham(String MaSP) 
    {
        int Gia = 0;
        String cautruyvan = "select * from SanPham where MaSanPham=" + MaSP;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        try {
            if (rs.next()) {
                long GiaNhap = rs.getLong("GiaNhap");
                float hs = rs.getFloat("HeSo");
                Gia = (int) (GiaNhap * hs);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return Gia;
    }
    //-------------------------------------------------------------------------------------------------
    
    public int GetGiaNhapSanPham(String MaSP) 
    {
        int Gia = 0;
        String cautruyvan = "select * from SanPham where MaSanPham=" + MaSP;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        try {
            if (rs.next()) {
                Gia = rs.getInt("GiaNhap");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return Gia;
    }
    //-------------------------------------------------------------------------------------------------------
    public void SetTongTien(String MaHoaDon) 
    {
        String KTLoai = null;
        String PhanTram = null;
        String MaKH = GetCbbSelected(cbbKH);
        String cautruyvan4 = "select * from KhachHang where MaKhachHang = "+MaKH;
        ResultSet rs4 =  cnn.ExcuteQueryGetTable(cautruyvan4);
        try {
            while(rs4.next())
            {
                KTLoai = rs4.getString("LoaiKhachHang");
                String ctv5 = "select * from LoaiKhachHang where MaLoaiKhachHang = "+KTLoai;
                ResultSet rs5 = cnn.ExcuteQueryGetTable(ctv5);
                while(rs5.next())
                {
                    PhanTram = rs5.getString("PhanTramGiam");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        String cautruyvan = "select sum(ChiTietHoaDon.TongTien) as TongTienHienTai,HoaDon.MaHoaDon from HoaDon,ChiTietHoaDon "
                + "where HoaDon.MaHoaDon=ChiTietHoaDon.MaHoaDon"
                + " and HoaDon.MaHoaDon=" + MaHoaDon + "group by HoaDon.MaHoaDon";
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
       

        try {
            if (rs.next()) {
                long ttht = rs.getLong("TongTienHienTai");
                long tiengiam = (long) (ttht * Float.valueOf(PhanTram));
                long TienCuoi = ttht - tiengiam;
                txtTongTIen.setText(String.valueOf(TienCuoi));
                String ctv = "update HoaDon set TongTien= " + TienCuoi + "where MaHoaDon=" + MaHoaDon;
                System.out.println(ctv);
                cnn.ExcuteQueryUpdateDB(ctv);
                LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        String ctv = "select count(MaHoaDon) as Sodong from ChiTietHoaDon where MaHoaDon = " + MaHoaDon;
        ResultSet rs1 = cnn.ExcuteQueryGetTable(ctv);
        String sdht = "";
        try {
            
            if (rs1.next()) 
            {
                sdht = rs1.getString("Sodong");
                if(Integer.parseInt(sdht)==0)
                {
                    txtTongTIen.setText("0");
                    String cvt2 = "update HoaDon set TongTien = " + 0 + "where MaHoaDon = " + MaHoaDon;
                    cnn.ExcuteQueryUpdateDB(cvt2);
                }
                LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //*********************--------------------------------------------
    public void SetTongTienGoc(String MaHoaDon) 
    {
        String cautruyvan = "select sum(ChiTietHoaDon.TienGoc) as TongTienGocHienTai,HoaDon.MaHoaDon "
                + "from HoaDon,ChiTietHoaDon "
                + "where HoaDon.MaHoaDon=ChiTietHoaDon.MaHoaDon"
                + " and HoaDon.MaHoaDon=" + MaHoaDon + "group by HoaDon.MaHoaDon";
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
       

        try {
            if (rs.next()) {
                long ttht = rs.getLong("TongTienGocHienTai");
                
                txtTongTIen.setText(String.valueOf(ttht));
                String ctv = "update HoaDon set TongGoc= " + ttht + "where MaHoaDon=" + MaHoaDon;
                System.out.println(ctv);
                cnn.ExcuteQueryUpdateDB(ctv);
                LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        String ctv = "select count(MaHoaDon) as Sodong from ChiTietHoaDon where MaHoaDon = " + MaHoaDon;
        ResultSet rs1 = cnn.ExcuteQueryGetTable(ctv);
        String sdht = "";
        try {
            
            if (rs1.next()) 
            {
                sdht = rs1.getString("Sodong");
                if(Integer.parseInt(sdht)==0)
                {
                    txtTongTIen.setText("0");
                    String cvt2 = "update HoaDon set TongGoc = " + 0 + "where MaHoaDon = " + MaHoaDon;
                    cnn.ExcuteQueryUpdateDB(cvt2);
                }
                LayDuLieuHoaDon("YEAR(NgayLapHoaDon) = "+year+"and MONTH(NgayLapHoaDon) = "+month+"");
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //-------------------------------------------------------------------------------------------------------
    public boolean KiemTraNhapChiTietHoaDon(int ts) 
    {
        String MaHoaDon, MaChiTietHoaDon, SanPham, SoLuong,ThongBao="";
        boolean kiemtra = false;
        MaHoaDon = txtMaHD.getText();
        MaChiTietHoaDon = txtMaCTHD.getText();
        SanPham =  GetCbbSelected(cbbSanPham);
         SoLuong = txtSoLuong.getText();
        if (MaChiTietHoaDon.equals("") && ts == 1) 
        {
            ThongBao += "bạn chưa chọn Hóa Đơn để lấy  Mã Hóa Dơn\n";
            lblMaCTHD.setForeground(Color.red);
        }
        if (MaHoaDon.equals("")) 
        {
            ThongBao += "bạn chưa chon trong hóa đơn nào cả\n";
            lblMaHoadon.setForeground(Color.red);
        }
        if (SoLuong.equals("")) 
        {
            ThongBao += "bạn chưa Nhập Số Lượng"
                    + "\n";
             lblSL.setForeground(Color.red);
        }
            try 
            {
                int bien=Integer.valueOf(SoLuong);
            } catch (Exception e) 
            {
                 ThongBao += "Số lượng phải nhập Bằng số"
                    + "\n";   
            }
      
        if (ThongBao.equals("")) 
        {
            kiemtra = true;
            lblSL.setForeground(Color.black);
            lblMaHoadon.setForeground(Color.black);
            lblMaCTHD.setForeground(Color.black);
        } else 
        {
            kiemtra = false;
            ThongBao(ThongBao, "lỗi nhập liệu", 2);
        }
        return kiemtra;
    }
    //-------------------------------------------------------------------------------------------------------
    public boolean KiemTraNhapHoaDon(int ts) {
        String MaHoaDon, MaNhanVien, KhachHang, NgayLap, TongTien,ThongBao="";
        boolean kiemtra = false;
        MaHoaDon = txtMaHD.getText();
        MaNhanVien = GetCbbSelected(cbbNV);
        
        KhachHang =  GetCbbSelected(cbbKH);
        NgayLap = txtNgayLap.getText();
        TongTien = txtTongTIen.getText();
        if (MaHoaDon.equals("") && ts == 1) 
        {
            ThongBao += "bạn chưa chọn Hóa Đơn để lấy  Mã Hóa Dơn\n";
            lblMaHD.setForeground(Color.red);
        }
        if (MaNhanVien.equals("")) 
        {
            ThongBao += "bạn chưa Chọn Nhân Viên\n";
        }
        if (KhachHang.equals("")) 
        {
            ThongBao += "bạn chưa Chọn Khách Hàng\n";
        }
        if (NgayLap.equals("")) 
        {
            lblNgayLap.setForeground(Color.red);
            ThongBao += "bạn chưa Nhập Ngày Lập\n";
        }
        if (TongTien.equals("")) 
        {
           txtTongTIen.setText("0");
        }
        if (ThongBao.equals("")) 
        {
            kiemtra = true;
            //lblDiaChi_KhachHang.setForeground(Color.black);
            lblNgayLap.setForeground(Color.black);
            lblTongtien.setForeground(Color.black);
        } else 
        {
            kiemtra = false;
            ThongBao(ThongBao, "lỗi nhập liệu", 2);
        }
        return kiemtra;
    }
    //-------------------------------------------------------------------------------------------------------
    public void reset_chitiethoadon() 
    {
        txtMaCTHD.setText("");
        txtMaHDCTHD.setText("");
        txtSoLuong.setText("");
        txtThanhTienCTHD.setText("");
        txtGhiCHuCTHD.setText("");
        txtMaIMEI.setText("");
        cbbSanPham.setSelectedIndex(0);
    }
    //-------------------------------------------------------------------------------------------------------
    public void SetNgayLap(String ngay) 
    {
        txtNgayLap.setText(ngay);
    }

    public DefaultComboBoxModel LayDuLieucbb(String bang, String Ten, String Ma) 
    {
        String cautruyvan = "select *from " + bang;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel();
        try {
            while (rs.next()) {
                displayvalueModel valueModel = new displayvalueModel(rs.getString(Ten), rs.getString(Ma));
                cbbmodel.addElement(valueModel);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return cbbmodel;
    }
    //-------------------------------------------------------------------------------------------------------
    public String GetCbbSelected(JComboBox cbb) {
        Object[] obj = cbb.getSelectedObjects();
        displayvalueModel item = (displayvalueModel) obj[0];
        return item.displayvalue.toString();

    }
    //-------------------------------------------------------------------------------------------------------
    public void ThongBao(String noiDungThongBao, String tieuDeThongBao, int icon) 
    {
        JOptionPane.showMessageDialog(new JFrame(), noiDungThongBao,
                tieuDeThongBao, icon);
    }
    //-------------------------------------------------------------------------------------------------------
    public void setSelectedCombobox(String cbbselected, JComboBox cbb) 
    {
        for (int i = 0; i < cbb.getItemCount(); i++) {
            Object obj = cbb.getItemAt(i);
            if (obj != null) {
                displayvalueModel m = (displayvalueModel) obj;
                if (cbbselected.trim().equals(m.displayMember)) {
                    cbb.setSelectedItem(m);
                }
            }
        }
    }
    
    //-------------------------------------------------------------------------------------------------------
    public void LayDuLieuHoaDon(String dkien) 
    {
        String cautruyvan = "";
        cautruyvan = "select MaHoaDon,KhachHang.TenKhachHang as TenKhachHang,NhanVien.TenNhanVien,TongTien,NgayLapHoaDon,HoaDon.GhiChu from HoaDon,KhachHang,NhanVien where HoaDon.MaKhachHang =KhachHang.MaKhachHang "
                + "and HoaDon.MaNhanVien=NhanVien.MaNhanVien and "+dkien;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"Mã hóa đơn", "Khách Hàng ", "Nhân viên", "Ngày lập hóa dơn", "tổng tiền", "Chú Thích"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblHoaDon.setModel(tableModel);
        
        try {
            while (rs.next()) {
                Object[] item = new Object[6];
               
                item[0] = rs.getInt("MaHoaDon");
                item[1] = rs.getString("TenKhachHang");
                item[2] = rs.getString("TenNhanVien");
                item[3] = rs.getString("NgayLapHoaDon");
                long vnd = rs.getLong("TongTien");
                Locale localeVN = new Locale("vi", "VN");
                NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
                String str1 = currencyVN.format(vnd);
                item[4] = str1;
                item[5] = rs.getString("GhiChu");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    //-------------------------------------------------------------------------------------------------------
    public void UpdateSL(String macthd)
    {
        String cautruyvan ="select SanPham.TenSanPham,SanPham.TonKho,ChiTietHoaDon.SoLuong,(SanPham.TonKho-ChiTietHoaDon.SoLuong) as Conlai from SanPham,ChiTietHoaDon where SanPham.MaSanPham = ChiTietHoaDon.MaSanPham and MaCTHD = "+macthd;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        int SL=0;
        try {
            while(rs.next())
            {
                SL = rs.getInt("Conlai");
            }
        } catch (SQLException ex) {
            Logger.getLogger(HDJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        String ctv = "update SanPham set TonKho = "+SL+"";
        cnn.ExcuteQueryUpdateDB(ctv);
    }
    public void LayDuLieuChiTietHoaDon(String MaHoaDon) 
    {
        String cautruyvan = "";
        cautruyvan = "select MaCTHD,MaHoaDon,SanPham.TenSanPham,SoLuong,TongTien,ChiTietHoaDon.GhiChu,ChiTietHoaDon.MaIMEI "
                + " from ChiTietHoaDon,SanPham where ChiTietHoaDon.MaSanPham=SanPham.MaSanPham  and MaHoaDon=" + MaHoaDon;
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        Object[] obj = new Object[]{"Mã CTHD", "Mã Hóa Đơn", "Sản Phẩm","Mã IMEI", "Số Lượng", "Tổng Tiền", "Chú Thích"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblCTHD.setModel(tableModel);
       
        try {
            while (rs.next()) {
               
                Object[] item = new Object[7];
               
                item[0] = rs.getInt("MaCTHD");
                item[1] = rs.getString("MaHoaDon");
                item[2] = rs.getString("TenSanPham");
                item[3] = rs.getString("MaIMEI");
                item[4] = rs.getString("SoLuong");
                item[5] = rs.getLong("TongTien");
                item[6] = rs.getString("GhiChu");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnResetCTHD;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaCTHD;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemCTHD;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaCTHD;
    private javax.swing.JComboBox<String> cbbGoiBaoHanh;
    private javax.swing.JComboBox<String> cbbKH;
    private javax.swing.JComboBox<String> cbbNV;
    private javax.swing.JComboBox<String> cbbSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel jlbTienGoc;
    private javax.swing.JPanel jpannal;
    private javax.swing.JLabel lblMaCTHD;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblMaHoadon;
    private javax.swing.JLabel lblNgayLap;
    private javax.swing.JLabel lblSL;
    private javax.swing.JLabel lblTongtien;
    private javax.swing.JTable tblCTHD;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextArea txtGhiCHuCTHD;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaCTHD;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaHDCTHD;
    private javax.swing.JTextField txtMaIMEI;
    private javax.swing.JTextField txtNgayLap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtThanhTienCTHD;
    private javax.swing.JTextField txtTiengoc;
    private javax.swing.JTextField txtTongTIen;
    // End of variables declaration//GEN-END:variables
}
