/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;



import Database.ConnectDB;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author nguye
 */
public class frmDoimatkhau extends javax.swing.JFrame 
{
    ConnectDB cnn = new ConnectDB();
    public static String pass="",user="";
    /**
     * Creates new form frmDoimatkhau
     */
    public frmDoimatkhau() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        btnDoi = new javax.swing.JButton();
        txtMatkhau = new javax.swing.JPasswordField();
        txtMatkhaumoi = new javax.swing.JPasswordField();
        txtMatkhaunhaplai = new javax.swing.JPasswordField();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("THAY ĐỔI MẬT KHẨU");

        jLabel2.setText("Tên đăng nhập:");

        jLabel3.setText("Mật khẩu hiện tại:");

        jLabel4.setText("Mật khẩu mới:");

        jLabel5.setText("Nhập lại mật khẩu mới:");

        btnDoi.setText("Đổi");
        btnDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiActionPerformed(evt);
            }
        });

        txtMatkhau.setText("jPasswordField1");

        txtMatkhaumoi.setText("jPasswordField1");

        txtMatkhaunhaplai.setText("jPasswordField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTenDangNhap)
                            .addComponent(txtMatkhau, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(txtMatkhaumoi)
                            .addComponent(txtMatkhaunhaplai)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(txtMatkhaumoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(txtMatkhaunhaplai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnDoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiActionPerformed
        // TODO add your handling code here:
        String strUsername = txtTenDangNhap.getText().trim();
        String strPassword = String.valueOf(txtMatkhau.getPassword()).trim();
        String mahoa = getMD5(strPassword);
        
        String strMKmoi = String.valueOf(txtMatkhaumoi.getPassword()).trim();
        String strMKmoinhap = String.valueOf(txtMatkhaunhaplai.getPassword()).trim();
            
        String cautruyvan="select * from Users ";
        ResultSet rs= cnn.ExcuteQueryGetTable(cautruyvan);       
        try {
            if (rs.next()) 
            {                               
                user =rs.getString("TenDangNhap");      
                pass =rs.getString("Password");
            }
        } catch (SQLException ex) 
        {
            //System.out.println("lỗi đăng nhập");
        }
        if(!strUsername.equals(user) || !mahoa.equals(pass))
        {
            ThongBao("Tên đăng nhập hoặc mật khẩu không chính xác", "Thông báo", 2);
            
        }
        else {
            if (strMKmoi.length() < 6 || strMKmoi.length() > 50 || strMKmoinhap.length() < 6 || strMKmoinhap.length() > 50) 
            {
                ThongBao("Mật khẩu phải nhập nhiều hơn 6 ký tự và ít hơn 50 ký tự", "Lỗi đăng ký", 2);
            } 
            else if (!KiemTraChuaChuVaSo(strMKmoinhap) || !KiemTraChuaChuVaSo(strMKmoi)) 
            {
                ThongBao("Mật khẩu phải bao gồm chữ IN HOA, chữ thường và số", "Thông báo", 2);
            } 
            else if (!strMKmoi.equals(strMKmoinhap)) 
            {
                ThongBao("Nhập lại mật khẩu không khớp", "Thông báo", 2);
               
            } 
            else
            {
                String mahoamkmoi = getMD5(strMKmoi);
                String ctv = "Update Users set Password = '" + mahoamkmoi + "'where TenDangNhap = '" + strUsername + "'";
                cnn.ExcuteQueryUpdateDB(ctv);
                System.out.println(mahoamkmoi);
                ThongBao("Đã thay đổi mật khẩu thành công", "Thông báo", 2);
                this.dispose();
            }
        }
        /*if(KiemTra(strUsername, mahoa))
        {
            System.out.println(strUsername);
            System.out.println(mahoa);
            
            String strMKmoi = String.valueOf(txtMatkhaumoi.getPassword()).trim();
            String strMKmoinhap = String.valueOf(txtMatkhaunhaplai.getPassword()).trim();
            
            if(!strMKmoi.equals(strMKmoinhap))
            {
                ThongBao("Mật khẩu mới và mật khẩu nhập lại không giống nhau","Thông báo",2);
            }
        }*/
    }//GEN-LAST:event_btnDoiActionPerformed
   /* private boolean KiemTra(String tdn, String mk) 
    {
        boolean kq = false;
        String cautruyvan = "select * from Users where TenDangNhap= '" + tdn + "' and Password= '" + mk + "'";
        System.out.println(cautruyvan);
        ResultSet rs = cnn.ExcuteQueryGetTable(cautruyvan);
        try {
            if (rs.next()) 
            {
                kq = true;
                quyen = rs.getInt("Quyen");
                ten=rs.getString("TenNhanVien");
                user=rs.getString("UserName");
                System.out.println(" " + quyen);
            }
        } catch (SQLException ex) 
        {
            System.out.println("lỗi đăng nhập");
        }

        return kq;
    }*/
    //Kiểm tra tdn và mk
    private boolean KiemTraChuaChuVaSo(String chuoiCanKiemTra)
    {
        boolean ketQua = false;
        Pattern p = Pattern.compile(".*[a-zA-Z].*");
        Matcher m = p.matcher(chuoiCanKiemTra);
        if (!(chuoiCanKiemTra == chuoiCanKiemTra.toLowerCase()))
        {
              ketQua= m.find();
        }
          return ketQua;
    }
    //Gọi thông báo
    public static void ThongBao(String noiDungThongBao,  String tieuDeThongBao, int icon )
    {
        JOptionPane.showMessageDialog( new JFrame(), noiDungThongBao,
                    tieuDeThongBao, icon );
    }
    // Mã hóa MD5 password
    public static String getMD5(String input) 
    {
        try 
        {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input.getBytes());
            return convertByteToHex(messageDigest);
        } catch (NoSuchAlgorithmException e) 
        {
            throw new RuntimeException(e);
        }
    }
    public static String convertByteToHex(byte[] data) 
    {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < data.length; i++) 
        {
          sb.append(Integer.toString((data[i] & 0xff) + 0x100, 16).substring(1));
        }
        return sb.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDoimatkhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDoimatkhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDoimatkhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDoimatkhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDoimatkhau().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField txtMatkhau;
    private javax.swing.JPasswordField txtMatkhaumoi;
    private javax.swing.JPasswordField txtMatkhaunhaplai;
    private javax.swing.JTextField txtTenDangNhap;
    // End of variables declaration//GEN-END:variables
}
